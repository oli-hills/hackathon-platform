---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lSQVBqckNkbk1SMjZqT0g0SG9FVHBkUnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalUwTWpCYUZ3MHlOVEEyTURrd01qVTBNakJhTUMweEt6QXBCZ05WQkFNVEltTnNkWE4wClpYSnRaWE5vTFdGd2FYTmxjblpsY2kxallTNWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzVHZnJWNHBZOU5tcUkzaEYrVGJhL3d1QkQyWm9UZCs5S2owL0dBWm00K01zZAoyZ016TzE1RWx6dG9VRlE2aWt4MUt5Umw3WHJSdmRscTB6dWlHTlYyUGJhVisveVhJUFNBcyt4N1pBVHd3KzVWClFLc3JLT3FKeXlldko3Z3ovcnFEdmdhbnAwTW1vTWZyMi80NmhtZ0lBc3V5N2Q3R2lQaEpEY21hR0FDWW5GbjcKSk8yMXpIY2dyK1YrdE5XK2ZlOGd4TGdTNFJaaExCMDY1eEVMYjdPU2xyMmo0T2J3bTkvaG1ZVldNSC9PdVhHMgorczF1YzdUTk1lc2tRbmZ6VkFBY3c5Y3ZlYmRZZUVBQWtjN0xwUG9XNjhIekI0WmwralhabWk5M2p1KzAreXdnClB6eTFFR05SUDBVanBYSjJtQ1g5RWJTY2llaXIvcGlxUkVISmk5ODlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYQ3drc0xXQmg0RVl0ajNBemlXYWxseXhoeWN3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFLRUpkVnFGRWVuYUIrV1V1bGdkUWF1ZFFGVU43aHJ5TE9iWW1kVTVjL1YrU1o4cVJEeVUKQm1ObmJaNVJiTHcyYXRaczhXTTM3T0RVUURlNDJRSnJ0bXNiQkF2SHU2ODV4UFNRdkNIRzVTdnV5RHZrazZQUApRaTFoU2NMV2h1QldvMlRvWFJ6L2UyVjFrdlBRTGlYR0ZTR095ZEdZdU5JQmgzTmhYUFFQYzZ2QzlEWjlzNUhGCjVqamVKRFRGSytKejBFVklYdzJSS3prdlVRUVJnTTNQblVueUNjd05NMEtvUWRjZXBkdFZzbVpEQU85SkF4LzUKUm9EWmovTGhjZVkzSWpvZE9GdC9pSk8rcWROZXR3cUYyZzN2UVVDdFdzMEdwdmhITWtTUHU4WGxRSEthS2poNgpDVE9POHBGQkJXckhLRHhLQXdlbEhBMG0xcldZdlFwbmtDQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lRTStPYmtvR1BJWkZza3QrdFBQMDZHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlOVFF5TUZvWERUSTFNRFl3T1RBeU5UUXlNRm93RHpFTk1Bc0dBMVVFQXhNRWNtOXZkRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTWc1Z1lmb1Q3UTFQMjFxTFBERUdVT3gKMmFlRCt5NFRhZnQwazZZd2hoeGJqbTQxSVJjMDFMOGFIUlFYVWIya2xhWmJtbXF5OTJ5NmFhbjIxdG1lTDR4Mwoxc0RaNlh5eEpWMDN6ejJGaUFhV1pzdm1NUlBVY3dkMlRqbTBQSUxaT1VaTThGZUVzaWN0WGdLT1J5ZkJCMTdoClZmajFKY2M3eHE5MHl1dEJWL0hCTlVwZTFCMEc0N2xORGFVUnVDa3RwNkJWTVVrSE5wZlRmcWFnR05qbXk5U2UKSWczQ2tER0NsT1NqM1lUczBwUmV4ZWp3RnhwK0RKc0RXTE5Hd0V4UlNxRFo5aUJWZE9jYjFuZHM5ZDd5OTU2WApoWDVockVoYUd4MTlNVVpaSnFPZHRCT2NROEpMQlhSN3podWdEL1k2WG1FV2ZqczNsUWRuL1BkN0VtMXo3RjhDCkF3RUFBYU4yTUhRd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGRndzSkxDMWdZZUJHTFk5d000bAptcFpjc1ljbk1CUUdBMVVkRVFRTk1BdUNDV3h2WTJGc2FHOXpkREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCnNiazVlS2dqcVpSVGFGNUxBZU55WFEzMHJWaTRYbWh3aytRV0ZhOFVNMEZkbEo2Z2NraFF3VVc4MU1OOVdsN2UKODhWUzJKZWozbE5OQSs5ekdOS0JqcVpieFpKZ25ld25qUTUxY1BhOC9OU2hEbkIvcS9BNUp0RnpSRWlmeTFXYwptQnpDUHN1azZhL1FxaytPcWI0S05HblFST1h0WGF3SForWTlMRnNIQmhTckk3TkZkbktTeTFyOWZINTg0Y1Z6CkJGN0VBSzI2d0xIdUo1bXllNEJFTGppSVNyTlp5QnV5Vll0S1RlRWFhWExPUzJWTzVMcXR3N05LQXZ5V2Z6VGMKM2VjOWJvMUVkNEx0YnplR0EzRnZ4NERoL1ZyeDdkbzA4eGM3Z2hoaFM4ZTY4d0dJNENlM2VEK3Q2cFpWVkNQZgpZbW9xY3lWMWFsMXY1TlU3TVhDZVNnPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeURtQmgraFB0RFUvYldvczhNUVpRN0hacDRQN0xoTnArM1NUcGpDR0hGdU9ialVoCkZ6VFV2eG9kRkJkUnZhU1ZwbHVhYXJMM2JMcHBxZmJXMlo0dmpIZld3Tm5wZkxFbFhUZlBQWVdJQnBabXkrWXgKRTlSekIzWk9PYlE4Z3RrNVJrendWNFN5SnkxZUFvNUhKOEVIWHVGVitQVWx4enZHcjNUSzYwRlg4Y0UxU2w3VQpIUWJqdVUwTnBSRzRLUzJub0ZVeFNRYzJsOU4rcHFBWTJPYkwxSjRpRGNLUU1ZS1U1S1BkaE96U2xGN0Y2UEFYCkduNE1td05ZczBiQVRGRktvTm4ySUZWMDV4dldkMnoxM3ZMM25wZUZmbUdzU0ZvYkhYMHhSbGttbzUyMEU1eEQKd2tzRmRIdk9HNkFQOWpwZVlSWitPemVWQjJmODkzc1NiWFBzWHdJREFRQUJBb0lCQUhSR2lRV1BFTEpiZGVFcApscjJmYy9pUEVSSXFJRFZLeXZKZmFkdEtOS2ZGTjdxaW1mdnJEMTJIWWJtb0xTMFBwbVI4ci9ra3czRmQ5RHppCi96UlRtOU5jU05lbjlPTVgwTllJc2c1TlBJaHUwWFc1MFdodHFQdDlaY0kyL0NrVTB5RVRUMFBUNk0yOWwrbXUKREg1MnA3d2U2aGx3N0NaK2ZVeXBhNm9oUVZ3L3lzRVZ5Z0hTNjNtRDZzRjVNUkVzRXlVZk0yT3ZEY1pQNHROTQpndU8yS09XSVJmWTR0dy9VTXVqM1ZVYnNURnU1aWxuL09hQkp6RnJnQjlPOFRBMkdSTTVvV2NONVRLVkl2Y2hvCjBINGdPQVZJRXl5K2ZsU0xkdTJlQ3JSL2pyVkE1UWxMUVpjR2pXeU51UkF5cCtpS0tTZ05zeGp6eWxhT0RFLzUKOXZrMGdva0NnWUVBOWZqWVZlU2JubmkweXJlL3FCcTJIYzBsK3QzSEFBR0xoajAyVURseEVZWTR4YTlIY0N3VwpXN0FPakhTYlFHZEhjNU9Wa0krNE1DbUpvdlVWN09wYXloQzN5K2l2SkFnVjhNN1dqZWRyQjlRcm1BdEs4cDIrClBEU3M2N0FoV3N6MGF5SVcrQ3pzcFNrckpHeVFMZG53T3JpSVZMeU9hOFN4N0tsQlZyRlEwWjBDZ1lFQTBHTTAKbGNkaDVGUW5DbmFJWCsvUVZOaTBXRURtQUo1aHlzV2NGUm05SGg4UHBsUkhlSjRkOFlIeTIrcEJ2ZXlxbFFkZApKc0UwNzhBT3JuVzJnNm1mc0dkQmprejNGNmpENnR0bXhUcVU2VElLaHJZMnR5dXlVZjJtOHdza0krd0c2R0RFClFVOTBHWEcvclluaFlnZ21lbHc1b1dOd2x4ZjRFOVI5UW83Rll5c0NnWUVBM1VXNjk2bnNCS2Q1bkZPb2FrVjkKUjFuaHJNZ04yUWVLeUh3UWZDTHdnRjlLZXl1dkRFM2MzeWFHTC94R0hhM0xMVUc2N28wYm1OZ0ZKVDl0TmUrdApOTkhOUmZaUWVBMStEMTlDeSswKzc1QUNsNGl4SjRpWU5majlCaGt3S0Vyd0plQkk0WUVvY1h1VGYvVFp6eVdiClluZld6TVBESzFlSzUrZHJDOTMvWWxFQ2dZRUFpZ082Vnh6SFU5NzhRR3pDNDY5RDduM2I2N3VIMlk4TU82em4KTS81cEI2TVF6VnR5UG91U1QxcCtpM0k1K2x6ZG1YaFlGSXZQMEo0RjJ6dnhGb0JvVi8vN0poRUpjYXovblBPVQp2RG1SV0dVaEhabGU0YS9hR1gyQ2JlUEtHdFIrdXJja0pCRklWblhFdWwzZ1hQb0M2ZlZjNGV1bkxScmQzZHhVCjNaa0xXQ01DZ1lCQURSNjN3bnY3WTJUYmM1YUVZWFlnTkxQNzhqRFpnRVAvOENXQ0ZCc3V0WFpBTnZEazJiWEQKSGdvRHdiVXRueUdlR3IrdldhcmFTM3R5b3BVdGYyYTlpWDJWZURXcHBzckRBbDQ3b20remd2Ry9SWjFOVFE2UQp6dzVtanJHQmRkWUdBMjFHMkxjeDZybDUvZFNkUGJEVXMyZEFrb2QwNDJDRTZIZ1JBdCtsWXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lSQVBqckNkbk1SMjZqT0g0SG9FVHBkUnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalUwTWpCYUZ3MHlOVEEyTURrd01qVTBNakJhTUMweEt6QXBCZ05WQkFNVEltTnNkWE4wClpYSnRaWE5vTFdGd2FYTmxjblpsY2kxallTNWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzVHZnJWNHBZOU5tcUkzaEYrVGJhL3d1QkQyWm9UZCs5S2owL0dBWm00K01zZAoyZ016TzE1RWx6dG9VRlE2aWt4MUt5Umw3WHJSdmRscTB6dWlHTlYyUGJhVisveVhJUFNBcyt4N1pBVHd3KzVWClFLc3JLT3FKeXlldko3Z3ovcnFEdmdhbnAwTW1vTWZyMi80NmhtZ0lBc3V5N2Q3R2lQaEpEY21hR0FDWW5GbjcKSk8yMXpIY2dyK1YrdE5XK2ZlOGd4TGdTNFJaaExCMDY1eEVMYjdPU2xyMmo0T2J3bTkvaG1ZVldNSC9PdVhHMgorczF1YzdUTk1lc2tRbmZ6VkFBY3c5Y3ZlYmRZZUVBQWtjN0xwUG9XNjhIekI0WmwralhabWk5M2p1KzAreXdnClB6eTFFR05SUDBVanBYSjJtQ1g5RWJTY2llaXIvcGlxUkVISmk5ODlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYQ3drc0xXQmg0RVl0ajNBemlXYWxseXhoeWN3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFLRUpkVnFGRWVuYUIrV1V1bGdkUWF1ZFFGVU43aHJ5TE9iWW1kVTVjL1YrU1o4cVJEeVUKQm1ObmJaNVJiTHcyYXRaczhXTTM3T0RVUURlNDJRSnJ0bXNiQkF2SHU2ODV4UFNRdkNIRzVTdnV5RHZrazZQUApRaTFoU2NMV2h1QldvMlRvWFJ6L2UyVjFrdlBRTGlYR0ZTR095ZEdZdU5JQmgzTmhYUFFQYzZ2QzlEWjlzNUhGCjVqamVKRFRGSytKejBFVklYdzJSS3prdlVRUVJnTTNQblVueUNjd05NMEtvUWRjZXBkdFZzbVpEQU85SkF4LzUKUm9EWmovTGhjZVkzSWpvZE9GdC9pSk8rcWROZXR3cUYyZzN2UVVDdFdzMEdwdmhITWtTUHU4WGxRSEthS2poNgpDVE9POHBGQkJXckhLRHhLQXdlbEhBMG0xcldZdlFwbmtDQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdVJuNjFlS1dQVFpxaU40UmZrMjJ2OExnUTltYUUzZnZTbzlQeGdHWnVQakxIZG9ECk16dGVSSmM3YUZCVU9vcE1kU3NrWmUxNjBiM1phdE03b2hqVmRqMjJsZnY4bHlEMGdMUHNlMlFFOE1QdVZVQ3IKS3lqcWljc25yeWU0TS82Nmc3NEdwNmRESnFESDY5ditPb1pvQ0FMTHN1M2V4b2o0U1EzSm1oZ0FtSnhaK3lUdAp0Y3gzSUsvbGZyVFZ2bjN2SU1TNEV1RVdZU3dkT3VjUkMyK3prcGE5bytEbThKdmY0Wm1GVmpCL3pybHh0dnJOCmJuTzB6VEhySkVKMzgxUUFITVBYTDNtM1dIaEFBSkhPeTZUNkZ1dkI4d2VHWmZvMTJab3ZkNDd2dFBzc0lEODgKdFJCalVUOUZJNlZ5ZHBnbC9SRzBuSW5vcS82WXFrUkJ5WXZmUFFJREFRQUJBb0lCQUFuS0QvUUQyY0kvQUg5ZwpqemhJeitOd1lQLzFvQ3ByYTJKY0ZmSDQzN0ppcGd0Y0hsTTFUcFQrRW93L3cxU2RQOUhxaURCRDBQMEt0MWJvCitQeG5wOUpyRFI3OWhxeFBkOTdlcFNFWmR4RnNxMHdpOFdxRTdYS0FKZ2NqYUtDSFZrSGxhT0N3L2VJckdxZWsKcU50YmhHRDRGT0hQcHJxRlAreE5LRjVYNnFBbmZhcGRtUjlDTzI4OGYyY0g5SC9vbW41WnhZUHg3bnRoVmFoYgoyWjlRRGFiOFFCU3ZObFRaUXEyZE82djdYZzUwbmM4S0pHN2EzU3RYMEF5L1lZSVovQU1DaHBWQXVBdERSckw3CnhpWmhBdGludUN6WmtSZkNuWFRRYnB2aTRpZkd4RmJ5YVk1U2NNZjRKUnJ0bysycG1acW80djhaL2RuR0x2OFgKdXQxWUxBRUNnWUVBMzFxUVdPODJUekhwQ2ZIL21ZOG9sT244cXZpb2pjMjhMaHhlMDQ0QXZzVjg3YWtZenF6RgpQWHJ2T1B3MVppcFNuZE56R2ppN2dRZTBpd2J6QWcxNzRGMEhTK0h4VHkwZkh1UFdwQzZyN1VOZTJQSWRTRGZ1CjBGbGxVRVc3K0NCVWo3eWUwcW10eWdRL2Y4M1hRSTREQnZnaVV0NDNLNy9nWHZkcFBtVU9NSUVDZ1lFQTFDZ1kKUFBkaHo4aGYyVjVmQURocEhnVnNVNVlOT0VSRndjcXB4akdIYUJnbWNBb3lZUEJvQnNsWlptaUhTTWMyekljMQpUNUtLUW1GcENPcjZ6RFI0R09GZ2kxRzRkOVErUHpwalZpM3k1eTZtL3RMK01IM1YxT3lrUzc3dlU0L2JDdzJZCi9iWUF1ZXF5U1N1bVpSSkdTdCtHaG9iYTNidlBsTCtCZjJZS0VMMENnWUVBbW9uTjhFcnJGOWFmdUVyaG9EMG0KUmdxejBSUWxnNkFEQVNDT0YvQmI0YU5CTWl0YXg3MVE1NTRFb1RnWU5tMDRKbzFrU1pOUllSQ1V3ZEQ0R01aOQpuSnFoYnNhUk1VZzJEU2gxbmJuUktXUUEzemgrUERhL0hSZU5ld0lVOGJSazdlTURQUjA3NnRnUG0zMHYzekdqCk5KSkJKWGN0VXk3NnJwcWZEaFhid0lFQ2dZQTV1YzhlaDVFdG9DKzBUV0U4QmgxVDlkWEx5SUJBVnhORDc0alMKVEplelV4N2lUV1AzekhJQnByZVVqY3lCbVBMb0k4SDFyTUhCM2c5ZVJkR0h6cDcrNWhRRzFHMkU3Vk1pa1JpRwpVbXBOVFB4VFNjV3dIQTBhcW1qcDAwSDdVcUVmR013UC9IMm1HSjM2R3M1am9kMU9jaE9BZHlFR1JCdnZOVXhmCkJieW5ZUUtCZ0NjSk1aczI5czAvTjJiZmwwYm0ybFFhOHI4R0h1dHQ3RHF5RFJoVXdCb2FzT2R1MFZrMnN2bC8KaDB0YmkzNjQ3MXdZbkNxYnVTaUdVTEQwbUtZQTRHMVp4VFFyMi9hd2t6VlR6RXorZ2JVdUF0eFZXUlB0RXRaVQpPWHZzdXNnbU9BKzJrenBtQ0p4Q1o5elAzT0YzYS9XYS9neHlDOE92cE96V3JrQ3QvQmdyCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lSQVBqckNkbk1SMjZqT0g0SG9FVHBkUnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalUwTWpCYUZ3MHlOVEEyTURrd01qVTBNakJhTUMweEt6QXBCZ05WQkFNVEltTnNkWE4wClpYSnRaWE5vTFdGd2FYTmxjblpsY2kxallTNWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzVHZnJWNHBZOU5tcUkzaEYrVGJhL3d1QkQyWm9UZCs5S2owL0dBWm00K01zZAoyZ016TzE1RWx6dG9VRlE2aWt4MUt5Umw3WHJSdmRscTB6dWlHTlYyUGJhVisveVhJUFNBcyt4N1pBVHd3KzVWClFLc3JLT3FKeXlldko3Z3ovcnFEdmdhbnAwTW1vTWZyMi80NmhtZ0lBc3V5N2Q3R2lQaEpEY21hR0FDWW5GbjcKSk8yMXpIY2dyK1YrdE5XK2ZlOGd4TGdTNFJaaExCMDY1eEVMYjdPU2xyMmo0T2J3bTkvaG1ZVldNSC9PdVhHMgorczF1YzdUTk1lc2tRbmZ6VkFBY3c5Y3ZlYmRZZUVBQWtjN0xwUG9XNjhIekI0WmwralhabWk5M2p1KzAreXdnClB6eTFFR05SUDBVanBYSjJtQ1g5RWJTY2llaXIvcGlxUkVISmk5ODlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYQ3drc0xXQmg0RVl0ajNBemlXYWxseXhoeWN3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFLRUpkVnFGRWVuYUIrV1V1bGdkUWF1ZFFGVU43aHJ5TE9iWW1kVTVjL1YrU1o4cVJEeVUKQm1ObmJaNVJiTHcyYXRaczhXTTM3T0RVUURlNDJRSnJ0bXNiQkF2SHU2ODV4UFNRdkNIRzVTdnV5RHZrazZQUApRaTFoU2NMV2h1QldvMlRvWFJ6L2UyVjFrdlBRTGlYR0ZTR095ZEdZdU5JQmgzTmhYUFFQYzZ2QzlEWjlzNUhGCjVqamVKRFRGSytKejBFVklYdzJSS3prdlVRUVJnTTNQblVueUNjd05NMEtvUWRjZXBkdFZzbVpEQU85SkF4LzUKUm9EWmovTGhjZVkzSWpvZE9GdC9pSk8rcWROZXR3cUYyZzN2UVVDdFdzMEdwdmhITWtTUHU4WGxRSEthS2poNgpDVE9POHBGQkJXckhLRHhLQXdlbEhBMG0xcldZdlFwbmtDQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lSQUl6YThOWHFGSmluU0ZyUjdDbEJLbVF3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalUwTWpCYUZ3MHlOVEEyTURrd01qVTBNakJhTUJFeER6QU5CZ05WQkFNVEJuSmxiVzkwClpUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU94T1dxdTFLV25wRVJlRFRjdVAKTlRzcjRna212UXNDbHZlaUE5QllUTnpYNTZBVGpDazc4WHpHanlUaUlEUnZHOFNFSmd0eWkxaVR6RUo1RU1OZwpnd1NQR0M2RDB0R3R5ck9ISWxCUkpRN2F3ekVJSngxYWw3VjNScjZLQ0NQRTRBOW5DUjkveUhxL1NJcFpYZXZwClBialc4RWR5N2FLeENyQ3grVDJKWTNkTFV5WE91RnVVQ2dHTm56Zm92SHh0aVdiME10RGZ4bDhwWTBjeFdqZHAKQjNwcWhjYmc2eVVyekpYdGQ2UVQwSTNVdFZpdGJmdHBYOVR4Q3NkRFBxZEJkWDN1TiswUXdRUUMvaUZlY1QvTgpKdklpalRNOXozNWo0ZE5vdkJnMFRhVTZKWVUvZFFVNHJiaVR1NWQrcGNETUlmZnE2OHRuUEpuUlJKN3QyRlBtClc5VUNBd0VBQWFOZ01GNHdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRkZ3c0pMQzFnWWVCR0xZOQp3TTRsbXBaY3NZY25NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUFlM1hSVWFnVDFLSkJhMFdBOUpjK3RiM1I0CmVXeCs5UktTQTk2V0xiS2MrKzZZSjlWWDVVbHprVnBLT05hN0QwMzNYemFsRjluaDU2VFIrUTJaaS9IcWpwdlAKVzkxZ2FEajJiUHk5ajR2SSs4K1VKcE5iZGVkbzNPNHhNQjVUS0g0STNqTkp5NFIvWXdydkpaakxsTWI2NHQwNApIb21OWFVzcGkwRkhaaTRZRmdTNVJrNFN2c3owNFQyTEV5TFdGOHhwU1ZjV1VEQm9BRWo2VEozR2F3cFI5UldPClhDZlZnRnRIaHZlK0E3VzEyUHFLSFVKVTBza0xWYjVSbk5ncWIwM0MvQzhDSWxpK3JoM0hEaURYNGJId0tOS3kKMzZkSXVtdURnaUpUaXd0TzJuSGp6WnFiaFRuNlpwZisvRmswa3dXajdDWkU4SlJuSWRjNStuY29mSERMCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBN0U1YXE3VXBhZWtSRjROTnk0ODFPeXZpQ1NhOUN3S1c5NklEMEZoTTNOZm5vQk9NCktUdnhmTWFQSk9JZ05HOGJ4SVFtQzNLTFdKUE1RbmtRdzJDREJJOFlMb1BTMGEzS3M0Y2lVRkVsRHRyRE1RZ24KSFZxWHRYZEd2b29JSThUZ0QyY0pIMy9JZXI5SWlsbGQ2K2s5dU5id1IzTHRvckVLc0xINVBZbGpkMHRUSmM2NApXNVFLQVkyZk4raThmRzJKWnZReTBOL0dYeWxqUnpGYU4ya0hlbXFGeHVEckpTdk1sZTEzcEJQUWpkUzFXSzF0CisybGYxUEVLeDBNK3AwRjFmZTQzN1JEQkJBTCtJVjV4UDgwbThpS05NejNQZm1QaDAyaThHRFJOcFRvbGhUOTEKQlRpdHVKTzdsMzZsd013aDkrcnJ5MmM4bWRGRW51M1lVK1piMVFJREFRQUJBb0lCQVFDQmZNNGltVHNBVmo2UAphOXdOVjRRTDBKZ2orNTVMa2plM3FvZjhldVpqZmN2bTQ4OUNLUjdEQ09zWGd2R3l5YytsZCtTQkVWdGFSbUwvCmFlZk5wKzBqYW1ZTjF4NkcxM3pqczRFU0VlVUVwc3VlNnFERWJRZ0U0RDliMmJkc0lrM0ZJdWpVNGVpeG1tL2QKbityZmd3ZlhhYkJ3OW9GUlRVSldZSy83RUhYNHY3Z3NRQnRDdSttTzZEaGRmMlZaVW00R2xJMDcvc28rci9JcgpnQ1lId1lqWEhBSUhrK3JQS0w2RXl6akJjclhvRzBCN1grWnZiek5UbWczSWx6a1V1U2toUHR0QW0rZC8rQ0dXCm9ObWY2UUZvRWJoOGg3ZnpnOS9OblUwSW1ZbTZXZ1lxK0l6TEJWM0pKVS9OSlk5c1dDVVVPdUlBMnVCMjFyTlQKUHBuSVEwZGhBb0dCQU8waHp6cStocFdaTUM4TkZLQTlHVGlmQTVacWxkbkN5cnlEeGprWCtEY2RURDkvam40SAo3QjZZK01oUVQzMG9QQlpIbW8vc1UwS0RKdDZiejg4WXNwdXpROG5DTW1HdnNiSlVxSHFWQ1RvZTVDcTVhcHU4CkdhS3dCeVM5aGJRZW1PMWwwRGlrU01saktQaFFPbU1wNmpNV09sb2wrM0ZCN2dmNTdSbnU0cndEQW9HQkFQOGIKdUVRTk82eVBlVVhzOUY0NVY4eUdjL29YMko4Z21rd0J1OTdiUzROZTl6TzRCa2JFOFpGRGJpd3ZsaFNXc0hSNQo4aTFqMk9kTE1YRGV0bEZxOU5VbnZHdFI0Y3NWMFRNTzV6dnpkU2plU081U1hDYjJLSk9IaXlWZW9JM2RTVGlMCkhQSWFOT1B4OEFmNjNoY0JsZWQrWjF0eFVjZXVaOC92VEFyU0VyMUhBb0dBYmltY3loK2xDbTZtTWRXVDFYVk0KK0Q3M1BiTzZkZlhHbFpscVJ5L1pnbEU4RU92RFdNMTVaaVdPdmhDQlBSV3FCSGV6V0ZWandLeUpMRFdhYncxOApQRlVsa3QrQzVGcm81SDNyM3piSm1KU3RUeVBnWVFVYnE3YTNPdHhJOXdxWDVRRzluL0xDVmJ5WlZmSi9qWDMxCmJWSlFQWDBUdU9QMkh3SitvZU9XdGQwQ2dZRUF4SkZWWUlwWnl0TWFmUGppS3FCQXVNVjVJK0d2OXAwbWh4NW0KNW9kUEhrRFVkYk44a3BjNkU5WkRWQ1N1bmRxbXlIa1dWRWMxWUxNZHUzekFPdWdSRXhWMUo3U0dLUGY4cER6OQppOEpDS21WdENNWEpYL1FZdStTYklRWlM3RHp3S0hONHNFdmxLU2JJN3owc1Y4bk8rZnI2SlFtaUhCeVV2VElFCkErcHVxZzBDZ1lBWCtNbWVQMjVkOE9WbnFkbUM2SFUyaThQb2FVNit0dEQ0dW8wL0lsejRYYldGMlpGSG9MTXIKalJsZWhSWFJ6UElpOFNFekovRnU2c08rbEx4RE9NYXFkMk54N1NhNEpHcngyWHB4WnhOanFsU0J2aUNzNEFuTgo5ZjFWRHltUjBNMWdNdVcwT0hjdFdMc2VrdGY2MnZqYXRRWHVJR09tTlJ6azVvM3hEangzMWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSakNDQWk2Z0F3SUJBZ0lSQVBqckNkbk1SMjZqT0g0SG9FVHBkUnN3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalUwTWpCYUZ3MHlOVEEyTURrd01qVTBNakJhTUMweEt6QXBCZ05WQkFNVEltTnNkWE4wClpYSnRaWE5vTFdGd2FYTmxjblpsY2kxallTNWphV3hwZFcwdWFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUEKQTRJQkR3QXdnZ0VLQW9JQkFRQzVHZnJWNHBZOU5tcUkzaEYrVGJhL3d1QkQyWm9UZCs5S2owL0dBWm00K01zZAoyZ016TzE1RWx6dG9VRlE2aWt4MUt5Umw3WHJSdmRscTB6dWlHTlYyUGJhVisveVhJUFNBcyt4N1pBVHd3KzVWClFLc3JLT3FKeXlldko3Z3ovcnFEdmdhbnAwTW1vTWZyMi80NmhtZ0lBc3V5N2Q3R2lQaEpEY21hR0FDWW5GbjcKSk8yMXpIY2dyK1YrdE5XK2ZlOGd4TGdTNFJaaExCMDY1eEVMYjdPU2xyMmo0T2J3bTkvaG1ZVldNSC9PdVhHMgorczF1YzdUTk1lc2tRbmZ6VkFBY3c5Y3ZlYmRZZUVBQWtjN0xwUG9XNjhIekI0WmwralhabWk5M2p1KzAreXdnClB6eTFFR05SUDBVanBYSjJtQ1g5RWJTY2llaXIvcGlxUkVISmk5ODlBZ01CQUFHallUQmZNQTRHQTFVZER3RUIKL3dRRUF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFILwpCQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVYQ3drc0xXQmg0RVl0ajNBemlXYWxseXhoeWN3RFFZSktvWklodmNOCkFRRUxCUUFEZ2dFQkFLRUpkVnFGRWVuYUIrV1V1bGdkUWF1ZFFGVU43aHJ5TE9iWW1kVTVjL1YrU1o4cVJEeVUKQm1ObmJaNVJiTHcyYXRaczhXTTM3T0RVUURlNDJRSnJ0bXNiQkF2SHU2ODV4UFNRdkNIRzVTdnV5RHZrazZQUApRaTFoU2NMV2h1QldvMlRvWFJ6L2UyVjFrdlBRTGlYR0ZTR095ZEdZdU5JQmgzTmhYUFFQYzZ2QzlEWjlzNUhGCjVqamVKRFRGSytKejBFVklYdzJSS3prdlVRUVJnTTNQblVueUNjd05NMEtvUWRjZXBkdFZzbVpEQU85SkF4LzUKUm9EWmovTGhjZVkzSWpvZE9GdC9pSk8rcWROZXR3cUYyZzN2UVVDdFdzMEdwdmhITWtTUHU4WGxRSEthS2poNgpDVE9POHBGQkJXckhLRHhLQXdlbEhBMG0xcldZdlFwbmtDQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtVENDQW9HZ0F3SUJBZ0lRZGxQeEYrcVRLY0RzR1NuM1BnL3ExREFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlOVFF5TUZvWERUSTFNRFl3T1RBeU5UUXlNRm93S2pFb01DWUdBMVVFQXhNZlkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwYnpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQU9oL3hOY0lYb1ppKzB2blhyUjVGVDhlNXQ5QVFLZ05UMXg5S3Jzb1FpWDFJc3VIYkFzaQorYWpObm9GSUc1NkdUMHFFTUxEM1g2N2hNQkplUXFrMmk0YXFWUXJ4eksxcmdaTCtSaENuekw3OXE3cVp3eVJJClFXanF4R0pXcWsxT0FZWWlTUFBveEcxNVBDWkZiOXRISXI4V2R3cTk5OTBVS3Vibk42aGVDTTVBNVZkeVdxQnUKRENnT29WUU93Qm9XWGdIcmczUXllamgxdXFLbU9YMTdKZi9HckVlMHR1MFBHSUNlVENWTU5QblVWQURnRkVNQwpVcE05S04xQlZhNzdnVUpCYjRaVkErd2FDcE1KTkFOYWxwZWxzbm51eFU0RU5UbTEvSHJVc0hSTmtMRUZSY2p1CkU4VUhVeHlZWDYzN0ZENDA4ZUdXVk13VXJGTklRYkgramdFQ0F3RUFBYU9CdHpDQnREQU9CZ05WSFE4QkFmOEUKQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQwpNQUF3SHdZRFZSMGpCQmd3Rm9BVVhDd2tzTFdCaDRFWXRqM0F6aVdhbGx5eGh5Y3dWQVlEVlIwUkJFMHdTNElmClkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wYkdsMWJTNXBiNElRS2k1dFpYTm9MbU5wYkdsMWJTNXAKYjRjRWZ3QUFBWWNRQUFBQUFBQUFBQUFBQUFBQUFBQUFBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVGVsUQpic3htdUR3cWd4bWdlNzJWcGN4SW5EOFNpTUZWdHFvZmJuQjRDTnBCVXNvS3R0Uy8rejJPc3NwcmJMOHAwM2ZkCjlwa2tRU3hIUUlKS0luQjhEc1VEVEhnQUIxbE9XWERiYlJKSmZwOHJxZFQyTlpHZFhxMm51RFJGTEdFd3JYREwKdy9wbFRYS0NiNk16VTA3VDI4Slp0ZU4xOUlEUllGa1hhVTFvYXQyVElJeERYQjYxSXEwT0hDNUdlR2x0ZHAxZgpEMTMrdCtWc3BNTlprT3hvL2NadmRjVHgydExhY1pnZlprR21KcnRVVkhkK1JhVkNac092Y2UzSWgwbWtNTm9pCkliUjJ4c3FkYXlsRTVLZ3BxTlJ3MWRlcXFhS3RKWERRbGlRM1lxUG1ncXpXVWZxUWRZRU5DQmRMMGpySEo0YzcKTUZUNTVldzh0aDg3bGM2MU9nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNkgvRTF3aGVobUw3UytkZXRIa1ZQeDdtMzBCQXFBMVBYSDBxdXloQ0pmVWl5NGRzCkN5TDVxTTJlZ1VnYm5vWlBTb1F3c1BkZnJ1RXdFbDVDcVRhTGhxcFZDdkhNcld1Qmt2NUdFS2ZNdnYycnVwbkQKSkVoQmFPckVZbGFxVFU0QmhpSkk4K2pFYlhrOEprVnYyMGNpdnhaM0NyMzMzUlFxNXVjM3FGNEl6a0RsVjNKYQpvRzRNS0E2aFZBN0FHaFplQWV1RGRESjZPSFc2b3FZNWZYc2wvOGFzUjdTMjdROFlnSjVNSlV3MCtkUlVBT0FVClF3SlNrejBvM1VGVnJ2dUJRa0Z2aGxVRDdCb0trd2swQTFxV2w2V3llZTdGVGdRMU9iWDhldFN3ZEUyUXNRVkYKeU80VHhRZFRISmhmcmZzVVBqVHg0WlpVekJTc1UwaEJzZjZPQVFJREFRQUJBb0lCQUdXZEtnZWRSY3JRU2Vwegp0Y1dFd2c5elR3NDF3OHh1L01kOGdRZUpZZGU3R3JqL2QrNHFIQmwxdkpmZVR3dnF3WTdjMVhjU3RzUDA4WkNsCmw5YmkydnBCU2FmZDVFbkxHYmVINEZGNU5SZ29RRHp1NVFYZmVvOERSRStDZHk0UU1NUlNDYlpvZmlrbWVtNXoKbko2bXFYNEFzSWlHWEdWSVlqUEd6R0dPcjZTTWpTamwvQ0RtMERGREorUjBBUWtVYTF4dDhNMlpFZTJxb2EvWQpvNGJaTjBGbFRNbGFEQnoyTGdNNlVTVE1BTExES1RzZG9Sdml0Y3FpRXUyM3ZURzN2QWM1SlNGK1dibzNXUXI5Ck1ZVGhhdC9uZGJURkovNG5hRy9TQ2FTaWd2NDVzOGh2OVRuUVVOZHg1enFHdUt4WDdKbTZjaUpMbm5MVlR0cWIKUzNSOFU0MENnWUVBOTNpZ2loVXo1Uy9obWRaL2RTN1NNKzRLUEdDaDQrblBYNnJTMnBhd0NKclNweFRkOEErNQozcU9GOVpVT2pVV2NVWFU4bDg1VnYwMU52SW9IWWd5Q3pWY0ZKeE0xN094WVp2YUNyWGhrVXlicW9lVG1ONzhVCkFlWjNoWVpkV1VyK3JwWXI1a2EvcVB5RGFTVGhXUDlGYUJ2cktrVy9hNW8xdllzUlpFVGFBbjhDZ1lFQThJTU0KQWRYMng1aHpjb05PdTE4TWlHRTI1ZHR5V0xQZlNPYWdkWEFXSEFEbzJMNzdjWlR4MEM2RGhnbjgyQk9SQlFsZApnSzI3dzE5UnUxcHpjRzkwektHN0krcDg1YVAzYWhZQTNqUEdzTk1zN3ZUeHM1eW5hRVVBakxpUW5vNnVaajhICjU4Rm8rcndNc3JQYUkrUFdvb0xnWmNlcjk4M0RTRlowZjRlZUwzOENnWUI5VEFnTW9kdWFxUG1TeUhYVVFSYVEKMEc5Q1RyTHBFSks4bjJNTzVjalBNb1NCc0NFRzBRK00yRUtWS3hrcEVodXBhckI1TkRGYUlLdkJVQ21ZelRqVQorc0JUSG5qcE1tazRDSXYxaE1WWERKY3p6UTk3SGpYbEdHbGZvNzVUM1pMQmxxczNkbzdINHNJdVZFdjhvWkxrCnVXNENBenArSXFBZkRmQ0tVZ29IeFFLQmdHdFowczR1OW90NFhHOU1kS1BsZE82YWxhcGJITnJDem5MM25iOU4KWEZEN2h2TFhxOXV5bzR4TWRxQXBiUlgxQmRHOXNHSnpLVSszQ0FBY0MxS3dMTzM1Y2xKQm82WE1YZTZZQzZNaQpjUmtUNlFadmhrS3BOWCt3N09IaXI0cFdIVG0rQUlWTkt0SmZoVHR1VTN1WmduL2U4dEg3SWFMbDBMaEUvcEs5CnNibDVBb0dBQ0xNR3lpMDhoYUlKSlpBUjZLZkIwTzVlYWxaU0xaMnQrNUVNcysvRG9RN0JYZW1VSS9yM1hsNXIKRVNuWmJJd0Iwd25Hc01ubWN5aExPMmxFd3IydVZNOFo1Ykw2bmZqSDhvWkFkMGVyZll1b0tQeFJaeU1takVINgpvTlIrUnZBQ1FGdEF1aHl4NjlnU0F3VVd3Y3NNNDBkS0NRM1ZoZVo0VlNGa2NDNmhNVVE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRXZ3UmozeGRqcWdkNGVEc0M3UFlaakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlOVFF4T1ZvWApEVEkxTURZd09UQXlOVFF4T1Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3ZLL2J3Q0R1M3FRcDl0M3N4WG0yOWsKTVVncVFtWFZpeTNuZFhhdHh5R3VWQnd4OUlrSDZZUG1VY2dLcmhGazdEZjdiZGoyUENxTkRzRFp0Ly9oUmdVVAp1WU93ZkEzMmhaSkpqQWtENzRYNlZqSS9iWi9oREwyZEhCN24xLzIzYXdvbWR1UUJpTWtuemhyYy9Xa3llL1dKCnAzVm02MjRRd1JrWWY5ZWlZZ1hCMHBBTStMZXVPZWhhdU13VXQ4c3VDa0xaeUdVQVBDZ2grZjNrdFFTc3RjRmUKaVZ2V05vblJoYnFldllQdWt3YjBvZm4xeHlmbDNaTEZ1dTcveXBqclZrTFd1N2p1dXB2bHdVK3Zlc21xYWk4WApqTEdlc3ZteDFuN1VKd0JYZzhFbTE3NkE1dkd5bitSSmFJT3NyRDJxOWhlb0l1d21Vc25peUF6eDQ3RG9va01DCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRMRTIvMVZLUkUrOURwUVV0Mgp4N3BVaXdOTDh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF2N0JTTVZtYzNUVUp0UnVHaUdaK1FWRnB3MUtOCnEydkFEakNrSTVHZUpxSEVsWmpBVlRQUDVEM0t4QkFURkw4cHdHZXoxMXNzc3FKOXZpUStBR2JHMW1VTkRSNFAKZlJKa2pSdXR4dktobGpRYTJ6dGh5NFNqNUlrUXJEMjh0MjhWbDF4ZVVESjNLWktHQnBqcmVXUm8ycFlRcWxtWgpBVW1UWnZtS0JiMHREZVdrQm85VTRYS25aTEJNZGVoODNXMWU5cmROMUs1MEhaZWhNUnJXQm1rdEVzcXorbEdiCnJ0MCtCYWgvRWtIWEpVNy8rWTVmSDdjTG1RL1I3ckxIdU85c1pTNlh2WXFHQmJ2bmZ5SEV5dTcvc1V2S1FLSHIKN1dJU0Zvd3M3QW50cDU2UkJYVXNGbjZURXJ6WkpkeVd5VFRvUjRmNUVJUW5ZNHBoVTZwSS9DaEluUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBNjhyOXZBSU83ZXBDbjIzZXpGZWJiMlF4U0NwQ1pkV0xMZWQxZHEzSElhNVVIREgwCmlRZnBnK1pSeUFxdUVXVHNOL3R0MlBZOEtvME93Tm0zLytGR0JSTzVnN0I4RGZhRmtrbU1DUVB2aGZwV01qOXQKbitFTXZaMGNIdWZYL2JkckNpWjI1QUdJeVNmT0d0ejlhVEo3OVltbmRXYnJiaERCR1JoLzE2SmlCY0hTa0F6NAp0NjQ1NkZxNHpCUzN5eTRLUXRuSVpRQThLQ0g1L2VTMUJLeTF3VjZKVzlZMmlkR0Z1cDY5Zys2VEJ2U2grZlhICkorWGRrc1c2N3YvS21PdFdRdGE3dU82Nm0rWEJUNjk2eWFwcUx4ZU1zWjZ5K2JIV2Z0UW5BRmVEd1NiWHZvRG0KOGJLZjVFbG9nNnlzUGFyMkY2Z2k3Q1pTeWVMSURQSGpzT2lpUXdJREFRQUJBb0lCQUE1cms2anoxMFhsbGIxNgpVcTNjamJ6Nk82bFdMRWxlRGV6NHdzNUhRbTVrNHUvMmZpWURQZHk3TVRVeXNnS09VWVA2OUhUWVdrV2Y2czhRCmdaZzhock80eVJlc3EybVBNZ3dJUTNBcHRYUlVJd0ZmcjZ5ZmJ0QUowN1p3SjExMDRpNzB1MENtZDE4VitCemMKZHdMLysyVEF6bVQzcmw1RTJBcFkzVGlxemFQY1lKdWZqOVd0VmVaSVQrNDIwZ0MrckNMUVRDaHltSHBFeU1VTwp3ZVhLYjk1NkU1a1Z2bGNkNmphRnA3ay9sTlFNUWYrWU1FNnlvcmhMLzM0ZmR1NEN3N0Z4dW05M042bFd6THc3CngwNExmQmZjb0YwdDlGVWhmQ1ROaFlRUHF4ZEo3ZTdpZlFNZ04xWFNOVFlYU3JnRi9QTDVRZ3RrSlBZVExmNFAKekc3RTNnRUNnWUVBL1RQUS9BckFIaHRKMDV0N2QxR01TVWM3MFJlT3QycVNCRDZBQmFWcmkrWkJHQWtmSWg4VwpYK0pLOUxTRVU3bEVWMENwc0VUUmMrR1FNSXdXdVFIVTZLSnVGcUhLYjlKZHFVQzkybC8veWIwZTdHdkp6Z1Q5CkNaRDZBaVB3eGxpS1NzVDB6ZDhqdnJrVmdBTm1VSytZNXRpajVIV3hEU0JzS1FVZzJwUmhDU01DZ1lFQTdtWHUKbThRYTJLRy9RTC9BbFZORDd1QkFoZEZhK2ZScGNVbGpPQVlSUi9IOEdMalRPR0xMYWdoZUhiUGQyZVhrQm9TRwoyNjlJY1N0cUwwdjdwdlQvMWh1NEhCSnYrUDdGaU1wd29sY1gxdWYyRG9kWUhuL1U2U1JybitmU25FTDlUWSsvCmRUTndFRTNaeUVwVm9wL28zUnZmcE45VEE1cWkwUWJ2aVBLTDVHRUNnWUF4aTZvaEo1bGdTc2F2ZVlVM1crV3YKa1JqTFdXaTd5MGEzUGVPZk56ZE1NTW9jQWV6dHFGZWdlNDlmUXRPQjdvYkk3QVpJVDY4TWxkNjVJVEJ4RTBLdQpJdHFYNHlEUnNNQlRGakFRUXlpeU9TZUw2NnVaZkxCbTVzK0ZDN05abkltekI4Yy9ZYUtFOTRLVmdoVExSUkVPCld1WDNGbkNHdVFseEhXZklYYkIvTVFLQmdDSTBWODdialNxRjBvWDh2U252bjNDWGxrcGM1bHUwbUtoYmFqUHcKa3V3cXFRdjNBTDgzVlk0cUV5N1p6cnZqd3hxNFN3MGNFaDNDcCtLUFdWVDBFL3pwVHpvZjN4YnZudkhvY2M2cApCaytjU201OU5zUnhmTi9Tak9xTmZXZFVLVG5HcFNhd3NhUjFOd2tJdVU2eStOczRrNWI1UDlUbGkvVEh0UGlHCkxGSWhBb0dBQll3cUZFcXc2ZndpNjRrRzBvY3BLRlRHNzg3RUY5YU5GLzl0K2YrVENiU21RTTVQVGliSzlYRVIKL21kZGN1dnlqQkxVaHhYWTI2REdIMERjVlNpVk9wclRBb2N6UWxWU3Y1VHhzeDgzNUo3cEFWWG8vTitaZURYcQpFRk1yZzQwK1pSNTVXYmFiL3VOd09PaVBiU3Z2emNuYUJKYXZYVk81TlJyS3pqQ0wvRGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRXZ3UmozeGRqcWdkNGVEc0M3UFlaakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlOVFF4T1ZvWApEVEkxTURZd09UQXlOVFF4T1Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3ZLL2J3Q0R1M3FRcDl0M3N4WG0yOWsKTVVncVFtWFZpeTNuZFhhdHh5R3VWQnd4OUlrSDZZUG1VY2dLcmhGazdEZjdiZGoyUENxTkRzRFp0Ly9oUmdVVAp1WU93ZkEzMmhaSkpqQWtENzRYNlZqSS9iWi9oREwyZEhCN24xLzIzYXdvbWR1UUJpTWtuemhyYy9Xa3llL1dKCnAzVm02MjRRd1JrWWY5ZWlZZ1hCMHBBTStMZXVPZWhhdU13VXQ4c3VDa0xaeUdVQVBDZ2grZjNrdFFTc3RjRmUKaVZ2V05vblJoYnFldllQdWt3YjBvZm4xeHlmbDNaTEZ1dTcveXBqclZrTFd1N2p1dXB2bHdVK3Zlc21xYWk4WApqTEdlc3ZteDFuN1VKd0JYZzhFbTE3NkE1dkd5bitSSmFJT3NyRDJxOWhlb0l1d21Vc25peUF6eDQ3RG9va01DCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRMRTIvMVZLUkUrOURwUVV0Mgp4N3BVaXdOTDh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF2N0JTTVZtYzNUVUp0UnVHaUdaK1FWRnB3MUtOCnEydkFEakNrSTVHZUpxSEVsWmpBVlRQUDVEM0t4QkFURkw4cHdHZXoxMXNzc3FKOXZpUStBR2JHMW1VTkRSNFAKZlJKa2pSdXR4dktobGpRYTJ6dGh5NFNqNUlrUXJEMjh0MjhWbDF4ZVVESjNLWktHQnBqcmVXUm8ycFlRcWxtWgpBVW1UWnZtS0JiMHREZVdrQm85VTRYS25aTEJNZGVoODNXMWU5cmROMUs1MEhaZWhNUnJXQm1rdEVzcXorbEdiCnJ0MCtCYWgvRWtIWEpVNy8rWTVmSDdjTG1RL1I3ckxIdU85c1pTNlh2WXFHQmJ2bmZ5SEV5dTcvc1V2S1FLSHIKN1dJU0Zvd3M3QW50cDU2UkJYVXNGbjZURXJ6WkpkeVd5VFRvUjRmNUVJUW5ZNHBoVTZwSS9DaEluUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRVzRXZFJIS01XbHFub1lCNk5IWS9BVEFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlOVFF4T1ZvWApEVEkxTURZd09UQXlOVFF4T1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhVMGRFVWdaVkIyUm5RUmsKMnpod0dGMFZkWVFZemxwTXk0WE9lVVcwVlR6WU1MN2xqaXZXaXNUMjhZZFdxeWNjaXVtRTJTWGFjL3psWVBNcQpUbGRaMDVtR1NvbGowa1FwYmZHR3VjZW5Rcm9yVmVMdXh1bmhJYndsaVBpQ0U3M3NodmkrK2hZQ3FSWit2OFZTCmtFRGtrNVBaYU9NUnQxTU9sdm5Ua3hJb0VvWEpuUWpZTUlpU0VtR01nTFF6ZjNEZnZKbzFhYkliemZzQmlEcVAKWS9KTGRmaE91RmgxQUhKTGVRRitlT3ZsV21xQTQ3NUpTa3R0QVdxSzFJOXRGdFBWVjVrMFlmbE1OaW9BN0p3WQpZK2wvcGRXMXlKb043RHBnR1k3QUxpSW9hVGtRZy96L1ZtU1ZkZkRYY1cvWGh0RHFwWENVUDUrK0FXRnl1RlQzClVQTlVpUUlEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVExFMi8xVktSRQorOURwUVV0Mng3cFVpd05MOHpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQnRleTRnL0dJTnB3MHI1cFBhUDFrYkNTclZ4TXFJMngwam4KWmJieWJKZ1RFY1laRlBJWEY3TE1jeUMydlJpUkY4L3pBRGtrbjlDRW9oT1ZMWTdwbGdWR3JrU2pJZmNCTFpMQwozdWVIN1M2TGpEWjdtWGg1ZXd6Um4xdE5Najl6aFR2dUpWWG1ZK2x2d2l3NkpkK3BsRituVFlML1JNMnprSUJECkhBR0UxemY2RnpBcXkyelNqVUF6ZHRkWXg5MjNBU3FiWWtCWHQ4YTlkK3ArSTh5WHh0WmdYZzhzd0Rob2VkWXYKL2pBYlNaTnRHOXhZTWlSZ2hjSjJaZG9ibzJreGpiekRNaWpnTTcxOVAzbDUwMkc5cXA0M3NNMHc4dGsrczFuVwpEUnZwbE9ySjBPR09SejYzMHNEaENpMEhZd0N3ZVhqckJLbU9uNmQ1WGUxaFVjcHUvRVU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeFUwZEVVZ1pWQjJSblFSazJ6aHdHRjBWZFlRWXpscE15NFhPZVVXMFZUellNTDdsCmppdldpc1QyOFlkV3F5Y2NpdW1FMlNYYWMvemxZUE1xVGxkWjA1bUdTb2xqMGtRcGJmR0d1Y2VuUXJvclZlTHUKeHVuaElid2xpUGlDRTczc2h2aSsraFlDcVJaK3Y4VlNrRURrazVQWmFPTVJ0MU1PbHZuVGt4SW9Fb1hKblFqWQpNSWlTRW1HTWdMUXpmM0RmdkpvMWFiSWJ6ZnNCaURxUFkvSkxkZmhPdUZoMUFISkxlUUYrZU92bFdtcUE0NzVKClNrdHRBV3FLMUk5dEZ0UFZWNWswWWZsTU5pb0E3SndZWStsL3BkVzF5Sm9ON0RwZ0dZN0FMaUlvYVRrUWcvei8KVm1TVmRmRFhjVy9YaHREcXBYQ1VQNSsrQVdGeXVGVDNVUE5VaVFJREFRQUJBb0lCQUFKeldMOFVOQ3hWU2ErMwpsRUVjekZlaElGa2JVT3VQTjVEM2tuN3pITEJLVnkwVDBlb1lKVXdIOGtGQnV4UFpJb09mTHVVN2tTRUxyUld0Ckw0TlZsbW9JYUNDWTRFS0dValZwWUpFQ0o5T3VXRWR5MENCc1d6MStCc0ZTeE5yVjZ4QXFHc1VrYk5nSXpYNDQKUnpRL2VoZFRLTW9pdDkrZENudFprd1VxbnBETVR3VjA5ZUMvYXVKZGZJS1hWcE8wL1FiakVIYmVXZkpZaFFIMgpHM3h6a1FvRHVUVjBRdDdmeXhXVnljY2M1bE5aSmh3RUtEZCs4SzRCY1RyTGhENnFCZDZRNmtlZlBHTmVtK080CldBMERFdEM5T2ZTanNvWVVLZEFRaXIxSGdSaGNNVUFvamRGYjF4TDhmd051MUE5T2Y0elQ4dW16UGdkcUlQNnMKOHV6NE1nRUNnWUVBM2x0ZVZqRnBmKzg1cDFsbU1IUXQwOHBCVmJvbUxFZklJOUpDR0VlZ05EWnBET21vQ0Y4MApBd0lab1p4UTBQQVRFY2RIdDRYdkMzY0tzeWFqUEF2L3NPSGJhU3pkMStUbTUxK0ZnalBSdUJPSUNMVHd2TFNUCk9aSS9veGM3clc5TnpEM3ZIcUMxUFlwYUtvZ3J3bDU0WFN0NUJqZ09GbXMwcDRscmJZR3p6R0VDZ1lFQTR5ZEIKQzlaMVc4dzlBVzhPdnNpNXNnbzRYc05xK0wxblJwbnh1Rm1oZ1EwQUYwdGxlTnBGMkJIK0UrNEJKelVLM2hPUwp6UUJoVzVVSFpTRExLQzMzMDhOOVh0b09QZ2lkUjEwMkc3eWlObFZIS3VyaTBab3dUaFZaamJ3L3JmZWdpZnRECitvYWVPWGY5TTRtMWRmcmlDRmVIclBYb2luSkYweHR1WVpSbU9Ta0NnWUFrbXZ3VHlueW93QlJJdFpINkpoWXAKU0tHcTRFTktoT0t3NnZ0UWpmSVV4bVJTNk9CdHlHYUNuRVRsOHhybTJxNzQvVXFVTHV0a2dzdHpKTWc0cVcwRgpqSmtYWG5pREF6NzBGaWlmZjdKbDBHbFRyWjM0SXU0ZHl6TEl3WmxrZXU5ZTBVOWRSbTJ2M09mdEdvL0JwdFcvCjJObEtxYzIvNlJRNUJJbDM5S05KNFFLQmdIbGdnVTVkQXdyUlFJdmlsd04wNkZ6dFB4L0wxZjRoM3V5SDEvVEUKMkJySUlwTlA4MkczYUhqRGJIdWp3clA3a05vSHBYcXJTRnFTY0lnbUZNaGNmNytGQnhuRzlMTkxFUmVRQkJpZwpIQ0ZpUWd2NXhNZHhWM3h4eGcrSlZwR1Q3eEdyMUxBcWZLT0NyU1o3NEIyeHVGUHl5WW12UU5teHBBUGc5WU5vCnM1SzVBb0dCQU1ycXBqeTF2dEhYUXNraDdUempYS3lwVkZleXhMc3BldWxXU09rMEFpcVRMMHlHcGpFekkydEMKMERJaHM5QnNTTHA2YlF6WGlhY1pmRDRVOGZ4QWxyUWxiU09HMnBTWG15Unp0OFJuQkJSNHV6WHU0dWdZUHQvdgppTzZPOTlzMWt2c0JMWWJ6MFJmZm5Jdlh2VUY3MXNuVTZZdEFBWDdsYTdtUWxTMXl6YWJlCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKekNDQWcrZ0F3SUJBZ0lRRXZ3UmozeGRqcWdkNGVEc0M3UFlaakFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlOVFF4T1ZvWApEVEkxTURZd09UQXlOVFF4T1Zvd0hqRWNNQm9HQTFVRUF4TVRhSFZpWW14bExXTmhMbU5wYkdsMWJTNXBiekNDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT3ZLL2J3Q0R1M3FRcDl0M3N4WG0yOWsKTVVncVFtWFZpeTNuZFhhdHh5R3VWQnd4OUlrSDZZUG1VY2dLcmhGazdEZjdiZGoyUENxTkRzRFp0Ly9oUmdVVAp1WU93ZkEzMmhaSkpqQWtENzRYNlZqSS9iWi9oREwyZEhCN24xLzIzYXdvbWR1UUJpTWtuemhyYy9Xa3llL1dKCnAzVm02MjRRd1JrWWY5ZWlZZ1hCMHBBTStMZXVPZWhhdU13VXQ4c3VDa0xaeUdVQVBDZ2grZjNrdFFTc3RjRmUKaVZ2V05vblJoYnFldllQdWt3YjBvZm4xeHlmbDNaTEZ1dTcveXBqclZrTFd1N2p1dXB2bHdVK3Zlc21xYWk4WApqTEdlc3ZteDFuN1VKd0JYZzhFbTE3NkE1dkd5bitSSmFJT3NyRDJxOWhlb0l1d21Vc25peUF6eDQ3RG9va01DCkF3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRMRTIvMVZLUkUrOURwUVV0Mgp4N3BVaXdOTDh6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUF2N0JTTVZtYzNUVUp0UnVHaUdaK1FWRnB3MUtOCnEydkFEakNrSTVHZUpxSEVsWmpBVlRQUDVEM0t4QkFURkw4cHdHZXoxMXNzc3FKOXZpUStBR2JHMW1VTkRSNFAKZlJKa2pSdXR4dktobGpRYTJ6dGh5NFNqNUlrUXJEMjh0MjhWbDF4ZVVESjNLWktHQnBqcmVXUm8ycFlRcWxtWgpBVW1UWnZtS0JiMHREZVdrQm85VTRYS25aTEJNZGVoODNXMWU5cmROMUs1MEhaZWhNUnJXQm1rdEVzcXorbEdiCnJ0MCtCYWgvRWtIWEpVNy8rWTVmSDdjTG1RL1I3ckxIdU85c1pTNlh2WXFHQmJ2bmZ5SEV5dTcvc1V2S1FLSHIKN1dJU0Zvd3M3QW50cDU2UkJYVXNGbjZURXJ6WkpkeVd5VFRvUjRmNUVJUW5ZNHBoVTZwSS9DaEluUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaakNDQWs2Z0F3SUJBZ0lRZDdsOGx2K0JXc2VuV1ViVUgxdXFiREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlOVFF4T1ZvWApEVEkxTURZd09UQXlOVFF4T1Zvd0xURXJNQ2tHQTFVRUF3d2lLaTVqYkhWemRHVnlMVEF5TG1oMVltSnNaUzFuCmNuQmpMbU5wYkdsMWJTNXBiekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOeWcKbjZQRE16RVhSb2dTMmJLUG85QmlQck92ZEFZSm8zNUlYaml6U3NPVU9PYzY4K2h5bkowN3FBcEcxN3VXdmpuNgp1RUY0cFJ2Zk9kVks0WXRKampRVjZiYU40bzdtZlQ2V2hpdHZrTVNyalJCalM5cmwxd2xDZXFCbmVqNkhtU0pyCk5ZR2sxeWpPZWJHR3liQVZ3bUlTR1hKSVFEZlk1UTlWQks2eTN3YmtNTmorM01RMU9VWFpaUjRmdTVMK3REelkKdzZwNUE3OXl6VXpza2I5WnZXTm5La3Q4QXhIVFN1U2toeXBYTHI2aFYzVmJ3ZVNsTGt0dlAvaW94T1BDQ2s3MgpjZVU4K2V4UWJvMDRpak04bVoxUXVyM3g1djRZR29EUUZEek14aVMrU1owSngzdS9uOVhkRUhKZHZZdGl6T3BuCitWSldDM3Q3Q3FZNno3NTNvNUVDQXdFQUFhT0JrRENCalRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGwKQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJndwpGb0FVeXhOdjlWU2tSUHZRNlVGTGRzZTZWSXNEUy9Nd0xRWURWUjBSQkNZd0pJSWlLaTVqYkhWemRHVnlMVEF5CkxtaDFZbUpzWlMxbmNuQmpMbU5wYkdsMWJTNXBiekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBVGowUTBzZ3UKbFJFRDVadU5IQ2JDOTZmVWhUcnl0MjgzOWJsTDQzZDBpd2VSL1B1cTg5YzU3b3JKWFFYa2hKNmpKTWxOaVhnagpHRnlQNTMzRDdQckljakthOGIzUGRKZG0yV01yWDk3cGpSNkFzWVI4THBUUXVOUXkxNURiamt4TkM3K3NkOG55CkNZMnUzMWI5R3JOcmF1dWQxR2NLZkJyazFIeWU4THlMWmEzSitWUE55aG1wNG1GQy9pYzJrR3VVNDg4Q1dNbksKWngvMVI1TUpOMGlOMWJRSjI4dTNidmNqZTlCendWa1YxV01UZkRCc0NlS2JVSlMyMzlPaC9IWi9yQjFKM01vVApvMWltd2tXU0ZHY3grZlBWMGF3NnNzTi9zNk1xdE1mUUtqZTdaQ2VGZDBrTzBSM2VCRTJpZ0hCYXZXZDVydUJ0CnVVZ0xJSER3c3dncDRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0tDZm84TXpNUmRHaUJMWnNvK2owR0krczY5MEJnbWpma2hlT0xOS3c1UTQ1enJ6CjZIS2NuVHVvQ2tiWHU1YStPZnE0UVhpbEc5ODUxVXJoaTBtT05CWHB0bzNpanVaOVBwYUdLMitReEt1TkVHTkwKMnVYWENVSjZvR2Q2UG9lWkltczFnYVRYS001NXNZYkpzQlhDWWhJWmNraEFOOWpsRDFVRXJyTGZCdVF3MlA3Ywp4RFU1UmRsbEhoKzdrdjYwUE5qRHFua0R2M0xOVE95UnYxbTlZMmNxUzN3REVkTks1S1NIS2xjdXZxRlhkVnZCCjVLVXVTMjgvK0tqRTQ4SUtUdlp4NVR6NTdGQnVqVGlLTXp5Wm5WQzZ2ZkhtL2hnYWdOQVVQTXpHSkw1Sm5RbkgKZTcrZjFkMFFjbDI5aTJMTTZtZjVVbFlMZTNzS3BqclB2bmVqa1FJREFRQUJBb0lCQVFDckx5M3VnS3lkc0hPWApiUmpneFRiVG53Y0xvRjBqdWlMUy93K3NhdURkczRvYlQ5Q2tVUmxYbmt3Wi9UR3lhWm9ibm4rTXZURk8yUHNrCmxiOCt0Y25TZkJZbEFSNEN4cS95K2hRTWE3b2wvdjJxODRDTnpidjFnVkZvV0NHdmxzS294QXAyRnhLaXBPSWoKYm5QYlhtYStkVkN0TFlZMlR1SWI3VmwrdTJiMURuUVBYb0U0aHo4ZmIxQ0xWeGgvczNCY2JBMjlJdzhxQWNPSgplcVlzZnVQek4xYWhleW5wM1pnQjNraVlGWVE2SzRjdVV2Uy9aVVRDY3FQeUFzYTJLd0E1S3VvUm5rVWVTUm9yCmFLemVaNXQwMGp0SHQzaFpUZXY5SDZWeHBLVXZ3bThYeWY0QkJGQlc5UnhQQmwyOXBVY0R4bVVjanFVc1BrNFoKNFhLbVpieUJBb0dCQVBiY0hvdG80aVgrUlpDWEN4RmEzLzlIK2ZDQndLakVvSEtIM1JLY0VwbnArSllySmpGZgpsbTZ5VG1rNnhDdDd4Mk53WGtMV3ExOUMyeW5HVVpvbGwxRXNraXA5TXNPM2pPNTh1Y1R6VzhPbldFMEdlY2VkCjhzdDJranhDNW9qb0FudUxsTDZiaThoaU1IR0gzV2paMHhsVVhiN1VCNHozOUhzTXRVMjlQUm1KQW9HQkFPVEwKMjd2SGNQWWJWVFBCWHZsRC9jMDJpWWZ0eUlPc01JVkRtRGFFQVBkMmcveFlPblNCQ0tuNTI5NXpOQm8xcHdJWQpzYmtVV1d2cTJTV1dyczFya0V1cVNQUzZneEJ2WkxNdWFsNmg5TkszYktjUEZadmFST3NhQXQ0ZktlWEhBQzJYCkRoVDVNNm5pVGFVckIyNDMwR0ZlYWFMaDJTblp2MlhTdkNEcGJ4L0pBb0dBSGNQQXN4SjhZaFJja3VpRFh4NVQKNzlYZjN3M21Ddk5hWFRUZ2hRUG9na0poeE1tREcyVHBJSVBEVEpEWFlsN1VWYnNRd29KYnUycTJQajA1VFpyRwp1ZlRqMHRleHJVT09iSnNCVXl2OG5vU284dkNhOG1TckI3bE9QSkhjZGhsell5NGJTemc2REhrNldoWUZya1RGClhVSjg0eXR4bForNERMWWxqakFKRS9FQ2dZQUNsVnF4MEJxeWJMU1ZsUVZoZ3ljR2Zpc25ZY1AxMktmam1WUEsKcWNycEFHbVZHOW50SHRmZU0zZ01Gdmpyb3RkejZwdDNINGV5OUQvbmNNQWdpYXBqY0ZUS2pxQ1VPdTNFS0M0RApTNGpjS0Q0TjFObkZuTDFTZWtTMkJWd1B3Q044WUV4RWFGdncreUV0VUVNUk40Z2UwVllZQkx6VEFDWnRHK2dMCjV4YmVJUUtCZ1FDdEFyZitTUWVZWFMxbWJWaXNuSUx6eUhRQzdpZzJsNjViT0ZQQ1hCVmZjdGd2YzFzNTg1VG8KY29oYXN3K2hJRFBQVS9aWmlGanZEb3lCcitqeGFRVzR1K0ZwUDhzUVRETVRoRG55K3pMbmlxcERuOUJnN3BHcQp4SUU3UnB5anFnYkZkSWY0bWtQdnM5VXJhbHhYdmpUVDVENG1adjVnaGJzclczMEd0b05uL2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: cluster-02
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "2"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  enable-host-reachable-services: "true"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "hybrid"
  bpf-lb-algorithm: "maglev"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9091"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: cluster-02
    peer-service: "hubble-peer.kube-system.svc.cluster.local:4254"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:

  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  - ciliumexternalworkloads
  - ciliumexternalworkloads/status
  - ciliumidentities
  - ciliumidentities/status
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - '*'
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9095
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9091
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 4254
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "8d18c66246f263c2c2da03ef4302591a22280ffe24a827d8a444e470258ac079"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.85.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: prometheus
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9095
          hostPort: 9095
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9091
          hostPort: 9091
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.85.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "8d18c66246f263c2c2da03ef4302591a22280ffe24a827d8a444e470258ac079"
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.5@sha256:8ace281328b27d4216218c604d720b9a63a8aec2bd1996057c79ab0168f9d6d8
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.85.250"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - name: prometheus
          containerPort: 6942
          hostPort: 6942
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.4.13"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - >
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &
          export rootpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $rootpw | etcdctl --interactive=false user add root;
          etcdctl user grant-role root root;
          export vmpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $vmpw | etcdctl --interactive=false user add externalworkload;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          export remotepw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $remotepw | etcdctl --interactive=false user add remote;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.4.13"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://$(HOSTNAME_IP):2379
        - --advertise-client-urls=https://$(HOSTNAME_IP):2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.11.5@sha256:5514ab415aa8986a45876490a14957489f73d86d55513242153d6893fd0fdaf3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
      volumes:
      - name: etcd-server-secrets
        secret:
          secretName: clustermesh-apiserver-server-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-admin-client
        secret:
          secretName: clustermesh-apiserver-admin-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "ebcc4e3fb3409bf24ad77418641940c4fd9375c934000b04980bea37c142537f"
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.5@sha256:8498f27a9c85ff74e56e18cfce4f0ccfae6f55d4134d708d364d273f3043f817"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
