---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRR3J0UFBHckluUG5lemZGTFNXSXZHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlORFEwT0ZvWERUSTFNRFl3T1RBeU5EUTBPRm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMcm5PNzYrMzdGeGFDNXJlRExoYVJXc1RHS1p2RjRBWFpiU2ZhNEM5ODNZWFJUOQpnc3pmZnJpSy9CT3ZoUmtkWVRwOGNnLzlmWFRLYW1UQ3FDUUIwbVN5Z0FSODJqZkJsaXJqWjhvMkUzNGlUZmxKCnlWTUg4R3hvWG1LVGxqdjNFQkEvc3ROUVhBUStPMG5ycHpjUHhxNUFNd2Z6SnVQam45dVRBdlJsaEQzdWU1c3MKQ1JZTFpIZFg0Y1pXeWtMWWFtamNxY0RKeDV4WEQxM1FLR1Z1SEVmUjVkbTJGdktheUxnbGhDc3hRTUp6WHo1dgpFL0lnQVdhZkFRemJwRzd3b3ZVbnNxSG5tNmRvczl1dEs4a0tqaWsva3FtazNFV3I5S3ZwZE5WTlg1NXBBSGNRCnBFUmVQazcvYmk4NnZjaTA2YWhyR2hqVXhLZzk5Z2luNHppNktuc0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGh2anNjNmp0Ri8zMUJzYXBEWW8yeUdTNE5WekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWZucGFGRlQ4MTVBeGROSFcxbVE5bUs5N2xrd09mbU9PenJLcDArTDE1US9pZ2xQQnhEVTEKbTdIQUZrci9oRmx1bVVIa1BHTExsYmtYT1pvTVNJNnZGUXovYmFITFpzWG9FUFZLdEZyQ2hJM3R0SVpTeWVEdwozVUlpeENJUVVPVHBRS2JJSnB1RFdQTVlUb1ZZV0xWRmVUaVR1ejA2dWduZDMxSmtGa0psbFFVWVRoNWhNWWJvCkljc3JhV3ZFU1ZCMHZCYVdhN0RPbUtmakFYMkZQU0VJWFZHWGVEVGVpekptTVNQUEgyL2VnbDZlWFlmczB5dUwKVCs0WEJUdXdGc2cwdFZncVFNbEdLbEoyUnpQMGR2cHpzZlZkTGwwZHFxUDIvUVdScXQ1aHhud0Q1YnJpazZCdwpwVEwzWmZWQXg5bVJKNUJCZWR4eDFaeDJJM3RiWXpaNU5nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQRENDQWlTZ0F3SUJBZ0lRZWxWNzljTXlZY3phTGxWOXdIcVJFVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlORFEwT0ZvWERUSTFNRFl3T1RBeU5EUTBPRm93RHpFTk1Bc0dBMVVFQXhNRWNtOXZkRENDCkFTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTnlTS1lrZk5qYk1kNzg4NExIdXQ4bHIKc2dEWDNkM3dhMGU3SGI5YU1QZEQzTlhBeW5IOGJxNFFPR0ZHS2dKZmZ1aGZFdmhDRmxDVHVNZ1RRcWoxQnRuNQpmaWkzU1MzZW03SFFtZS9neGk5M3NFM01FbjloRk5NYlo3NjFJV2pvcDYvUG1CWnhlb3NuN1lQc2VCT0RWbFhaCjRMbGxtSmFYTW1lQStyYjczVmpONEZ2UFBnZUlKVEp1MGlUMzRsYkkzOE8vWEhFMGtwKzh6anF0VWdvRHY0TDcKUENRdnUxOWdFczBxdWtVOFBrTUVRbDNjdlRJL0N0Y1ViNEx4WjF6R0xpRm9ONDh1czlwUEp6K0pIL1J3Sk9MZApQcnFJZVJhb3ptMXA0a0NZQzdYOFJpUWpENWZ6OGl0Vi81dTZLdmVEQW9GTklLQmlTazlQQ3lTZ00ydEZTbFVDCkF3RUFBYU4yTUhRd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGT0crT3h6cU8wWC9mVUd4cWtOaQpqYklaTGcxWE1CUUdBMVVkRVFRTk1BdUNDV3h2WTJGc2FHOXpkREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBClpLait5NEh5TzF1SkVUV2dtSFVCUjdqSWpwU3huZnJSWUpzYUEreGcrcEV6cXJDNlFoci8wRlJ2MWg2eGVKMGcKZnM0anVjQWxVR1lOWkZyc04rS3VCRE5QcmpsSThRNnB0enFSdjVhdTI5LzYxcWR1WnZYZ1c3SDZuNkhhWS9BRQpZYVpiTUNPS21sb21TSE5kQUVmamlmaTFoOEkyTUVkRlBrS2xRbnpUZjlFQUhKd096ZG5sQTFFS3J2SWVTOWw0ClVSd0RKL3JkS1BkUXZZanlaSzRyZEZzRHlhaFE3blJnWnhVL205c3VZTFdYK05IMmtRdmpoZVgzVGpwZzhpd00Kelo0elhsK3NaWUJqNjV1bjQ1emsrN2p3Q0J3Zm1aMzBURmxYK3NiMlp5bnY4RER5RWRZRWREOVFBaTBpbzVnQgpLRnJrRXZhV1BoQXBJMTdKbVI4Sk1nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM0pJcGlSODJOc3gzdnp6Z3NlNjN5V3V5QU5mZDNmQnJSN3NkdjFvdzkwUGMxY0RLCmNmeHVyaEE0WVVZcUFsOSs2RjhTK0VJV1VKTzR5Qk5DcVBVRzJmbCtLTGRKTGQ2YnNkQ1o3K0RHTDNld1Rjd1MKZjJFVTB4dG52clVoYU9pbnI4K1lGbkY2aXlmdGcreDRFNE5XVmRuZ3VXV1lscGN5WjRENnR2dmRXTTNnVzg4KwpCNGdsTW03U0pQZmlWc2pmdzc5Y2NUU1NuN3pPT3ExU0NnTy9ndnM4SkMrN1gyQVN6U3E2UlR3K1F3UkNYZHk5Ck1qOEsxeFJ2Z3ZGblhNWXVJV2czank2ejJrOG5QNGtmOUhBazR0MCt1b2g1RnFqT2JXbmlRSmdMdGZ4R0pDTVAKbC9QeUsxWC9tN29xOTRNQ2dVMGdvR0pLVDA4TEpLQXphMFZLVlFJREFRQUJBb0lCQUZXS09hRjhBVUp2T1dGbwo4cHNPd1NmVUpFdy9hMFBQSVV2SVBWa2dXUzBMbkhFcE8xbkpWQU1kTjBCQ1BiaDk0SEd0cldXcCs0MTBQSTBiCkt4YnJMNlVKSk93VmFNUHBPT2hVeGQ1SmhaS1RFRVNiaC9EdWJXMFJpOEpoN0hzSy96MG5mUXYzSmxjaFBQT1UKbVZ5MzZwdVF5NTRhMEhwV1dLM2JUMS8zZlhnYVp3aFNOMnQ1UXRoNFJRMDV1bXdnYUduQUN2dDNoTUU5NlhaZQpnZWZwNGNOcklQdzVjank2ZVdaTlFDMkFkN3drT3NjRGEvUzFaMVlqUUJ4OElzSzAwaFI5MWR3TTl5UGNpS1N0CnlhcEI1K1dqWGNOQ0J5NnVtbDQrR2ZZMUFGMU9ycjVxY3ZvckZZWk1pelZUSVZYNjdxdHY4bDJ3SWtaT3Y0WVUKT2xDYWYyRUNnWUVBK1lRVDF5NXRxMmlUc1NMM25ReWlSRHlVOXorM3JoMkZXUVM3b0Rlemk0aFNIb2ZjS2kvTApyUTlQLzZtS2dVaXI2N3Bhc1ljUnRDUEpqTXNJYkpsZWY4WXZFQS9MRFJpQkVIVGxyWVR2RVQ1ajc1ZVhteldqCjhITU43Njg1WFE0QmFmVHczcWROUzVheU9ZT3RHS0lrV0NDd2RCZWtaeUlMQ0tLZG91R2ZDeWNDZ1lFQTRrMkcKdEtGVjljaExLTEFsR1ZDbU12NjlrTlQxTWZBRTZGQ3lXMHVnbXFvSVBEeThMS1ExK2oyL1JFcE5ob3BoZEd1YQpyRUw1ZkV1UG95VGtFbUo0OVJkMUFEeVBpTzgyOVMyR1grYmk5VzRNMExpOVdoLzVRTXkvSTIrZUhNamRwazVlClFRSmwzajgwZXBLTVVkR1VjaEdvaW8yMlpOZ3A3SXFzdm10Tm5DTUNnWUVBMnJ2NldLME8zekR5S0ZzckRyWkEKbWVreC9mNFJtOFd0WEhoVnN3S2hselNPS00yWktESjJMdVE1a1RxamZPcWtMQ1pWMDBOQk5kWVpuaDl1NXlVYwpQbzhTT3RaZGZzRjRnMkMyNkFLZFFWU2NiekZKYW5yL21JNkVMUlpEQjF4N3lOTTlSVE1OQTdLNzBzZW9PdXdKClNHaC94NFhpVGJiK1RUZWhVV1RROUFrQ2dZQit1VUVVaHovV21XbVZDRVpPRGI1ejBmaWZVTkZaUEhuVENkVkcKa0d3SUQrejZwbHdOZDRzT2JXTmN2MnI0U3lkVmhTZ2hESVFlbVVWKzZ4cVlQUEpVOU9TODFDemdWbXhsRVRBdApKZUt6NHdOa0lmOU9wNWJ4TlhaWFJwcTRyYmFJK1Z1SWRlcExjUU5YSEJkZGZjbnRzbnU1MHE5dmV5akczOFRxCkFMWitGd0tCZ0R0Y1NNZ3Qzc2dWYXRLRWIvc2YwOWZMUy9zem0zRHVRbEoxbnRYaGpBSEZQVmxpbjRZTkV3cFYKc0dYZW1KaHRoZ1EwbWU5Uy8vL1pyeGI4Q1B6VzNPa3dpaGt0dFVrUk9CYUlQSGRjMnU0eXpiTlBlQWpEMmdOQwovNVpoN1l3a1kybTVoYmhaamNyNHFDbWF4SWkxdnhxVWM3em1EZUN4T01GSkpPdnhyUHhoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRR3J0UFBHckluUG5lemZGTFNXSXZHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlORFEwT0ZvWERUSTFNRFl3T1RBeU5EUTBPRm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMcm5PNzYrMzdGeGFDNXJlRExoYVJXc1RHS1p2RjRBWFpiU2ZhNEM5ODNZWFJUOQpnc3pmZnJpSy9CT3ZoUmtkWVRwOGNnLzlmWFRLYW1UQ3FDUUIwbVN5Z0FSODJqZkJsaXJqWjhvMkUzNGlUZmxKCnlWTUg4R3hvWG1LVGxqdjNFQkEvc3ROUVhBUStPMG5ycHpjUHhxNUFNd2Z6SnVQam45dVRBdlJsaEQzdWU1c3MKQ1JZTFpIZFg0Y1pXeWtMWWFtamNxY0RKeDV4WEQxM1FLR1Z1SEVmUjVkbTJGdktheUxnbGhDc3hRTUp6WHo1dgpFL0lnQVdhZkFRemJwRzd3b3ZVbnNxSG5tNmRvczl1dEs4a0tqaWsva3FtazNFV3I5S3ZwZE5WTlg1NXBBSGNRCnBFUmVQazcvYmk4NnZjaTA2YWhyR2hqVXhLZzk5Z2luNHppNktuc0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGh2anNjNmp0Ri8zMUJzYXBEWW8yeUdTNE5WekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWZucGFGRlQ4MTVBeGROSFcxbVE5bUs5N2xrd09mbU9PenJLcDArTDE1US9pZ2xQQnhEVTEKbTdIQUZrci9oRmx1bVVIa1BHTExsYmtYT1pvTVNJNnZGUXovYmFITFpzWG9FUFZLdEZyQ2hJM3R0SVpTeWVEdwozVUlpeENJUVVPVHBRS2JJSnB1RFdQTVlUb1ZZV0xWRmVUaVR1ejA2dWduZDMxSmtGa0psbFFVWVRoNWhNWWJvCkljc3JhV3ZFU1ZCMHZCYVdhN0RPbUtmakFYMkZQU0VJWFZHWGVEVGVpekptTVNQUEgyL2VnbDZlWFlmczB5dUwKVCs0WEJUdXdGc2cwdFZncVFNbEdLbEoyUnpQMGR2cHpzZlZkTGwwZHFxUDIvUVdScXQ1aHhud0Q1YnJpazZCdwpwVEwzWmZWQXg5bVJKNUJCZWR4eDFaeDJJM3RiWXpaNU5nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdXVjN3ZyN2ZzWEZvTG10NE11RnBGYXhNWXBtOFhnQmRsdEo5cmdMM3pkaGRGUDJDCnpOOSt1SXI4RTYrRkdSMWhPbnh5RC8xOWRNcHFaTUtvSkFIU1pMS0FCSHphTjhHV0t1Tm55allUZmlKTitVbkoKVXdmd2JHaGVZcE9XTy9jUUVEK3kwMUJjQkQ0N1NldW5Ody9HcmtBekIvTW00K09mMjVNQzlHV0VQZTU3bXl3SgpGZ3RrZDFmaHhsYktRdGhxYU55cHdNbkhuRmNQWGRBb1pXNGNSOUhsMmJZVzhwckl1Q1dFS3pGQXduTmZQbThUCjhpQUJacDhCRE51a2J2Q2k5U2V5b2VlYnAyaXoyNjByeVFxT0tUK1NxYVRjUmF2MHErbDAxVTFmbm1rQWR4Q2sKUkY0K1R2OXVMenE5eUxUcHFHc2FHTlRFcUQzMkNLZmpPTG9xZXdJREFRQUJBb0lCQVFDYTZlM3JPK25NK1dLUQpseU1aaVJ2QWl2OEUrc2ZXWWhjd1cyY3dRK1dCQ0VTZWtVRkk3alhxWDhodnlKdFpKYkRnK1NUUmZCbndJNVhyCnppdnZMRk5tZzB6NGEwT3oweERVbTRmN1lyYmxaU21iNWp5b1JYeFJYbkJjNUZjeGZLWWowYWcyM2ZSbXorMzAKWnc1QjVTR1liRDNmNlBuakNWZ0dkdU9NRGxoOXV6SWhCRHBFREJvVjg2eGFrL3RVbHFjLzEwZ2poUUhrRHJNNwo3MC9xL2d6ODk0R00yYTVGNWh6bEoxcjQwQ2JpRFprakVOejBFRE5yTlA4VW00RkVGRWJlaHBFcUdDUDhwTmd3CmdkQ0FiVXFxWXRrWXV1ejJaRncvUVh1dVo4NEZIa1FJU0ZyQklDKzhVR0VkdmdrVnBZRjdJZ2pUR25XTHFZR20KVERiSWt0aUJBb0dCQU9mSFZMQjl3VmY3WG1TOHkwbEtyUndsbks2VkVMWFF6S0RUUEowY1lZUFpJM1dlN3RiNgpBZFg4Q1BmWEUzYmc4MStWUmtrOWVsdzdlY3ExMlEzbVlpalBJQVdvZ0JaN2RCOUtwcUorSkNVZ3JFZzY5eEx5Ci95d2hESEVIRlkxeVVjcUFnMDVqUjBEUythKzN5YWh6dldLUnlwYXpvbVZOblNFQmdxMEJQSGYxQW9HQkFNNXYKWHl3M3ZhZEg5S2JSNVB0UHRIeXVlNWJCZlovM1dTaHdvQUZsZklqRmh0dVY5eWV4VWExaWIxZWVvN1dXSmpiSApXWURjWmg1eEFaS1hJVUFMdkRKR1BYRGZrbTlJSFlDaVpaNEV0VmhCNVJhNXNCamVlRGF4TGdZUmRuL1lMckdyCi9scHZMVHNJRElybC9VM3hsdm5Hd2F3OWwvcElUeTVpUHFNVU8wS3ZBb0dBZHQ1dzNhOHhHSGxQZU9TbWNXaysKRE9CeFVjd2JiTk93RG84bldBQTFOdFNHN2d6YnV4OHZEOXFaa3RvWUhuRFNBR1JqVHE2YjhXK0RUK1loY3BLRQpKeC9LOFh2d2JSZFZmN0xlY1JtMldlQSsyekI2aEpwaEtmV3RGczZtVEF1a1RQSEo1Y3Jld1MweVp0OGdLaWRwCnFvTFEzcWMwRXpaUjdwcUN0VTJjQUgwQ2dZQjMzQ3FDWGdyOEtjZGZaTmR6STZCRUZIc2wyVXE3cXI1VndLN20Kb0twaUwyNVI2UTBNT3VTVnEyWENsaFd2eFhLQ3M5VEFBVGc1ekp1QkpjYmtqT3ZFdFF2UGtjQlFaS3JjbVc0dgpCY1RWYmMwNkdLNnFnZUdDdi9WZENKNnBORGhJYVBqU1FXTWR0MXF3KzBETUZNMzRVUEw2c3ZpZkZZVUVCWDhnCjZRcFBlUUtCZ1FESVI3SHlSU1BUZDRHUlIzekxTU25GdTNjRnNucXZZNnk0NVpKUHZZeHVRNW0wWjlkSlJPQUEKYjZQUVgwS2ptY21ZRVY0NkhBb0lySjg1cjhueDhDSFlhbGxlOUZkQldjT1dITjJ2aUZyYkZ0eXg2SXZBVUhhMApITFhZZ0NlL3hnTjlTTVQzUjFPQWlKZWxJWnBha0I5ZkYxYUwxdlF1MEtyT3ZDYzNnczJyU2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRR3J0UFBHckluUG5lemZGTFNXSXZHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlORFEwT0ZvWERUSTFNRFl3T1RBeU5EUTBPRm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMcm5PNzYrMzdGeGFDNXJlRExoYVJXc1RHS1p2RjRBWFpiU2ZhNEM5ODNZWFJUOQpnc3pmZnJpSy9CT3ZoUmtkWVRwOGNnLzlmWFRLYW1UQ3FDUUIwbVN5Z0FSODJqZkJsaXJqWjhvMkUzNGlUZmxKCnlWTUg4R3hvWG1LVGxqdjNFQkEvc3ROUVhBUStPMG5ycHpjUHhxNUFNd2Z6SnVQam45dVRBdlJsaEQzdWU1c3MKQ1JZTFpIZFg0Y1pXeWtMWWFtamNxY0RKeDV4WEQxM1FLR1Z1SEVmUjVkbTJGdktheUxnbGhDc3hRTUp6WHo1dgpFL0lnQVdhZkFRemJwRzd3b3ZVbnNxSG5tNmRvczl1dEs4a0tqaWsva3FtazNFV3I5S3ZwZE5WTlg1NXBBSGNRCnBFUmVQazcvYmk4NnZjaTA2YWhyR2hqVXhLZzk5Z2luNHppNktuc0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGh2anNjNmp0Ri8zMUJzYXBEWW8yeUdTNE5WekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWZucGFGRlQ4MTVBeGROSFcxbVE5bUs5N2xrd09mbU9PenJLcDArTDE1US9pZ2xQQnhEVTEKbTdIQUZrci9oRmx1bVVIa1BHTExsYmtYT1pvTVNJNnZGUXovYmFITFpzWG9FUFZLdEZyQ2hJM3R0SVpTeWVEdwozVUlpeENJUVVPVHBRS2JJSnB1RFdQTVlUb1ZZV0xWRmVUaVR1ejA2dWduZDMxSmtGa0psbFFVWVRoNWhNWWJvCkljc3JhV3ZFU1ZCMHZCYVdhN0RPbUtmakFYMkZQU0VJWFZHWGVEVGVpekptTVNQUEgyL2VnbDZlWFlmczB5dUwKVCs0WEJUdXdGc2cwdFZncVFNbEdLbEoyUnpQMGR2cHpzZlZkTGwwZHFxUDIvUVdScXQ1aHhud0Q1YnJpazZCdwpwVEwzWmZWQXg5bVJKNUJCZWR4eDFaeDJJM3RiWXpaNU5nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLVENDQWhHZ0F3SUJBZ0lSQU5xSTVFd2l2aW02aW83L0ZXaWt0bll3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalEwTkRoYUZ3MHlOVEEyTURrd01qUTBORGhhTUJFeER6QU5CZ05WQkFNVEJuSmxiVzkwClpUQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1GZnh2cldEaDlWRkpEcjA2V2UKc0FkTW1qSVRtcVhucVk2U3FPQzl4T21ld3JOYVZNeDZwbksxSkZnelVHSjRIN0c4KytmZnZGSkd4aXFDMy9IRgp6WmZQcTNyYWluUzZXUjRub2ZCU2NQOTJzekNKVzdzYjNLVUJqZm1WcjJDaW81YlloT3lTTG8xMEFQUXgxWkVaCnlqaEhBZUpOcVo3YTZKbGNqUWhmbTJYWTE4TXlueEM3cVlWYW5rVC8zZTdsOTZlYWl0bUZBRFEzSlBFWHgzUG8KNU5sOFg4ZzJFWnl2K1NiaG9KZUcwQ2RJWFJFbDNMOW5xN2I3bnc3K0M1UDgvVHdld1haVjN6U0h4MWxwVUZPOQovTmM1bkZQb1NWTVYwTVF0Qm5Yc1lTL3hlaDFXK1ZZNncvM0JrcnVnLzQzRXhtL0FYVnNLWWlCTVF5YjNYSEtkCkFPTUNBd0VBQWFOZ01GNHdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUIKQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjhHQTFVZEl3UVlNQmFBRk9HK094enFPMFgvZlVHeApxa05pamJJWkxnMVhNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJYdW1QVkZXeVlKbDN2QTRybEkxVVRLclNxCncwTjJCVE9tNjdsNmYramVHc1ppaUE3QzZRd1QxUzNNaEVoakUwY2dMNnBoL0RvR0xPb2R3S21JVTF0YWVVQjQKeGFRRFVZTmE1MjFXVFR3SkNDZjQ5akxMNWxRVytnOXZZMjB3L3JsVzViUnNobnJ3UmsvdU8rZUNYVWFWa1l2UAo4UkxxWUlSZXpNeVVLS1g1WCtlM3dwb2xJNGVlOWhqTjNQZXRPdHpUSDgvYVlKZFdGTXRsMlZmdFlNSVlRYVhTCkhMNUxBNFFTek5qMFBHT0dXMUI5eDJ6c2d1RDRETFJEbXhJWWs4bVBPNC9BSmNOcUp0MmRNQkVQL05PKzNxQkUKQllpcDIzalZ0YTEvZHp1M2dYUFRUNS83Zml4cVFOOC9Lby8wQlpObVVjQVJnNllLeDRkSm9iZC9BRi9wCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1YvRyt0WU9IMVVVa092VHBaNndCMHlhTWhPYXBlZXBqcEtvNEwzRTZaN0NzMXBVCnpIcW1jclVrV0ROUVluZ2ZzYno3NTkrOFVrYkdLb0xmOGNYTmw4K3JldHFLZExwWkhpZWg4Rkp3LzNhek1JbGIKdXh2Y3BRR04rWld2WUtLamx0aUU3Skl1alhRQTlESFZrUm5LT0VjQjRrMnBudHJvbVZ5TkNGK2JaZGpYd3pLZgpFTHVwaFZxZVJQL2Q3dVgzcDVxSzJZVUFORGNrOFJmSGMramsyWHhmeURZUm5LLzVKdUdnbDRiUUowaGRFU1hjCnYyZXJ0dnVmRHY0TGsvejlQQjdCZGxYZk5JZkhXV2xRVTczODF6bWNVK2hKVXhYUXhDMEdkZXhoTC9GNkhWYjUKVmpyRC9jR1N1NkQvamNUR2I4QmRXd3BpSUV4REp2ZGNjcDBBNHdJREFRQUJBb0lCQVFDM1hOcVJmK2hrVFlqeQo0cXdPb0NyS3dSaDE0NkVCTUdyWGhyb2NZZFlXc1RSdVhYbUxhOEhwZzFxelIvVXhhamFqazFCS3p4MEQ1NWlCCk54aWphYTFLQnVIVDNPYnRTTWE0a1Z3OVJlOWdUbTRiMkNQamlNZndyMGl4SWY3cTQwMjcvQlFQUDQ1bEUxclUKTTIwUDZpU1d1TDVRbU5QK2poV0JWd0ZrcjBQcmpjdmZLNEV6Q0p3aU5zNGtlWFltS2tpUzBwb2ozbnE2S2NkdgpROHN6QkNqUVZzYnZ4bHh2eEpaSWtTa1V0bE9vNlVUWC9VZ2FZWi9DUjlxZzhxVk1EdHlSeGxyNkdVb0JhMmhHCkluRXpoTEhmZjhWQzZLVGNvL2pBTzhJSGUwOVJzZmgveHZycGRLOUZ5c0VTazVCWjNDTXdqcmJ2eVM5bkQ4b3QKMEVDQlF1SUJBb0dCQU01QnBFSU1WUHQ0UE9Bc29IYVFpWUMxR2hnWEhVdTYyb2NuaFE1Y3BUaWZHejhKNjFQWApFUnE5UkdCcEszRE9ueFBFSFlVcEcxVHRUSTR2SUd1UzdGcTkzeVh0bzFnRWxEeGNza2xFWjA5cXNEQ0dVb1VMCmIvSGtKc2ZUWWVCVkZVOTV5Z25hZnk2bSs4VUYrTGU0WkR2S00vYXQyblR1SGlsVE9PeXB2d0JGQW9HQkFQQUMKeHkxdlpwNE9XenlJWkFvcjN3cFdUOENTK3JGNDhwL0xHOWR5cjZjaVk2c2hYak5tQzNkRjNBNjVLemo5TUZrZApUYy81eU0zT3l5Z3J2Yks2ZE9xWS94ZjVEdzBDWWwyekhSZ2JQb2daejZtL3I3UXMrN3NpUHk3TmhyZm5QdjNnCnQrNStMRkpsVER3T2E4TUlWMU4rRDBVekhtVy9POThMUTZhTkFYTUhBb0dBZTFHajlCbUxkZzhkMXFyWUJndkYKS3I4ZEt1b25DZkJlV0JDNDdTMVhXOU5GWnh0M0tGbWVVRzU1UTJ1ZUhZUnNlRlQ1a1hSU2N5U3VjUlNjUGJWSwp1N1pxaFRMZ1J1LzE4V0U2OTdOK1VXMW9pcHJGRytjS3Q0WEI2aGZvblVoQnhaTDd5WWhxSW1xVWZlaGtIUFNTCmVXMGNSSkVOM0h2Q2JOTGxaaHJYcUVFQ2dZQlZXdmVRdmZ5Rm0xOXhFS1JiUmF6bGxUcDVwd3ZHejllaFltODkKV01rRkxHSzd1bnN3MWtxZm1WV2dXdFAzU1h2SFJYZWx6aFJPdFF0azl1Rll6WnpFemJKeXlSMUVLQ1BwWk1pbApDUk5jL2Fqdm1uOFhHYVJRc2VZOGM5VkVVOVlBSGNucjVDMUpCRU52WEVXUXI4ZTJwcTh4a2ZOdWhlcjU4SnlYCmY3QVRRd0tCZ0NrSXByeXI1M0ZVcW53UEZxWFpGU2pBYnJWN2hJL3BNNmF1U21GTWxJSnltWjFYTGQraEo4d2IKOVVvQWVvM3Z4WnJUM05hd1B4UDVCTTVjZCsyWk5OREtENTVGeTVzM2d4a3dMWldGeG82RTRVV0RNQWdHS0g2RwpsbE9nQWVIeVBGZEdFTmdwelV5bjl3SWNSSnRRc3ZrQW1oY3JTUW0wYWJsVk1xTjNjQ1NnCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSVENDQWkyZ0F3SUJBZ0lRR3J0UFBHckluUG5lemZGTFNXSXZHVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKamJIVnpkR1Z5YldWemFDMWhjR2x6WlhKMlpYSXRZMkV1WTJsc2FYVnRMbWx2TUI0WApEVEl5TURZeE1EQXlORFEwT0ZvWERUSTFNRFl3T1RBeU5EUTBPRm93TFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsCmNtMWxjMmd0WVhCcGMyVnlkbVZ5TFdOaExtTnBiR2wxYlM1cGJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMcm5PNzYrMzdGeGFDNXJlRExoYVJXc1RHS1p2RjRBWFpiU2ZhNEM5ODNZWFJUOQpnc3pmZnJpSy9CT3ZoUmtkWVRwOGNnLzlmWFRLYW1UQ3FDUUIwbVN5Z0FSODJqZkJsaXJqWjhvMkUzNGlUZmxKCnlWTUg4R3hvWG1LVGxqdjNFQkEvc3ROUVhBUStPMG5ycHpjUHhxNUFNd2Z6SnVQam45dVRBdlJsaEQzdWU1c3MKQ1JZTFpIZFg0Y1pXeWtMWWFtamNxY0RKeDV4WEQxM1FLR1Z1SEVmUjVkbTJGdktheUxnbGhDc3hRTUp6WHo1dgpFL0lnQVdhZkFRemJwRzd3b3ZVbnNxSG5tNmRvczl1dEs4a0tqaWsva3FtazNFV3I5S3ZwZE5WTlg1NXBBSGNRCnBFUmVQazcvYmk4NnZjaTA2YWhyR2hqVXhLZzk5Z2luNHppNktuc0NBd0VBQWFOaE1GOHdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBUEJnTlZIUk1CQWY4RQpCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGh2anNjNmp0Ri8zMUJzYXBEWW8yeUdTNE5WekFOQmdrcWhraUc5dzBCCkFRc0ZBQU9DQVFFQWZucGFGRlQ4MTVBeGROSFcxbVE5bUs5N2xrd09mbU9PenJLcDArTDE1US9pZ2xQQnhEVTEKbTdIQUZrci9oRmx1bVVIa1BHTExsYmtYT1pvTVNJNnZGUXovYmFITFpzWG9FUFZLdEZyQ2hJM3R0SVpTeWVEdwozVUlpeENJUVVPVHBRS2JJSnB1RFdQTVlUb1ZZV0xWRmVUaVR1ejA2dWduZDMxSmtGa0psbFFVWVRoNWhNWWJvCkljc3JhV3ZFU1ZCMHZCYVdhN0RPbUtmakFYMkZQU0VJWFZHWGVEVGVpekptTVNQUEgyL2VnbDZlWFlmczB5dUwKVCs0WEJUdXdGc2cwdFZncVFNbEdLbEoyUnpQMGR2cHpzZlZkTGwwZHFxUDIvUVdScXQ1aHhud0Q1YnJpazZCdwpwVEwzWmZWQXg5bVJKNUJCZWR4eDFaeDJJM3RiWXpaNU5nPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtakNDQW9LZ0F3SUJBZ0lSQUpiUjRzTDhWZDI1VjloZUlxaDRuVUV3RFFZSktvWklodmNOQVFFTEJRQXcKTFRFck1Da0dBMVVFQXhNaVkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMV05oTG1OcGJHbDFiUzVwYnpBZQpGdzB5TWpBMk1UQXdNalEwTkRoYUZ3MHlOVEEyTURrd01qUTBORGhhTUNveEtEQW1CZ05WQkFNVEgyTnNkWE4wClpYSnRaWE5vTFdGd2FYTmxjblpsY2k1amFXeHBkVzB1YVc4d2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDOHlacGpyWHpnNGtmL2srbzBSMXRCKzhQWGpHYllsbTlFU2lvMUdXSG1OR1VLREZOZworRjdXWHh2ZUxkajFHRllvT2dyazZBMXRVYmVyTHVOS2lycTN3OUNqMzdwZ1ZtcDloSlFFT1FpSktWN0F2ZFU1CjNzbnhQZU5FdW0zdkpiR2JDYzVnVlR4WS9UeXd6N0lCTUpQcVZzdlZBcXJ5bTlsMTBRN2RuZDVyMHZuR3NieTcKYWp2aGd3SXBVdkhMSDBOM1g4MWo4MnZFbzUvaEJSUEdiZyt6UEV0WXN2MUtEbVV3cy8wRDlPSHNHZDc3bmVCSApLWWQ5Z1dHVmw5alptTzhrTmJJc1lIUENyT1IzOU1GUENjZkI5dmJ5eCtCUzlLWEtIUDg4WnpvM001K0h3WTVECnZnbkhKQWtGRFo0R1lwc2xGZnF0eHcvdDg0TTROMzBzMHFJM0FnTUJBQUdqZ2Jjd2diUXdEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUI4R0ExVWRJd1FZTUJhQUZPRytPeHpxTzBYL2ZVR3hxa05pamJJWkxnMVhNRlFHQTFVZEVRUk5NRXVDCkgyTnNkWE4wWlhKdFpYTm9MV0Z3YVhObGNuWmxjaTVqYVd4cGRXMHVhVytDRUNvdWJXVnphQzVqYVd4cGRXMHUKYVcrSEJIOEFBQUdIRUFBQUFBQUFBQUFBQUFBQUFBQUFBQUV3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUFXSwpmMDJ3UjNvOE1iTDMvR05WTUd1NjliUU5aRHRPT1dxUEczalcvWG5vRHFNOTdyVnJWOWdaQlpLV05OUGFDdjIvClNuM1FOTEZiS052SFNVL2ZKZTVDUEdhZHNyMm80REtHTkxtNDdFM3hmbGlSakp6OWR0M1Vob0JacExlU1dSQjYKTGFZYWptRm9UZ2dkNTU5WFBYRVAwQ3ZyQ1poTDFjUGwwSzNGOWx1cG9OQytJWDhVdUNLK09yNW9IZnYzMDZrNQo5OVU5QnFmeWNmNXhNUDdKOEZxbnF6bDZDYUJDWm1mTHY1V3lXL0w2NTFWSGhhdkZCQm02NFNOSXgveXZ0akQ4CnpXQnJOdGtRRWRRK0lGWTJ5cGhLSUpQdUdsaU1sbGJMMTlqQ3JEdjhNUzdzdkVCWUl4ZnNSckNQRFlIU0MwbWoKWXVSWXJSOFN5d09BbHVMRzFhVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdk1tYVk2MTg0T0pILzVQcU5FZGJRZnZEMTR4bTJKWnZSRW9xTlJsaDVqUmxDZ3hUCllQaGUxbDhiM2kzWTlSaFdLRG9LNU9nTmJWRzNxeTdqU29xNnQ4UFFvOSs2WUZacWZZU1VCRGtJaVNsZXdMM1YKT2Q3SjhUM2pSTHB0N3lXeG13bk9ZRlU4V1AwOHNNK3lBVENUNmxiTDFRS3E4cHZaZGRFTzNaM2VhOUw1eHJHOAp1Mm83NFlNQ0tWTHh5eDlEZDEvTlkvTnJ4S09mNFFVVHhtNFBzenhMV0xMOVNnNWxNTFA5QS9UaDdCbmUrNTNnClJ5bUhmWUZobFpmWTJaanZKRFd5TEdCendxemtkL1RCVHduSHdmYjI4c2ZnVXZTbHloei9QR2M2TnpPZmg4R08KUTc0Snh5UUpCUTJlQm1LYkpSWDZyY2NQN2ZPRE9EZDlMTktpTndJREFRQUJBb0lCQURDNUQwRitldVpIUURHego2UlFJL29KdkNjSk5tQlY1N2NtQUlwaUZyb0NOTVM2QXM5d28vY0R4MXUxbWc4SHR2LzZ0ekRYN3RjdHE5YTRXCmNjN0JNeU5PUkVDbTh5RDk3SW5zZDQ4SGNTNkZJTkU1clJnOGFYMzdiUFpGN3kxeld2MGFjTXJuOUtVNjVqanoKd1lzUkVIdkFYdWJndzJITjJ6Zk85cmszanpuZ1RkNnZFNGJ3UW1mblZEYWJZbDRST3EwWnl0cEN1VEx3SXhrKwp5VzZKaE9qTHF4TG5wa3ZhTU1wVGZoYmR1VW1YVndTcXRUVUpnZmxyWmtLSEZnQXhPVzJpVWFQWFY1Wm9YZ2NwCjljcTk2WEwrWWhOZ29TVGFFMWlPMFJJVk15NnB5c1BiV3RLdnYybU1La0JteEJId3gvblNWRCszOWdXV1FPZGgKVFJreXhQRUNnWUVBMlVTTHZPSzZKa0NiQmpUUE1yNG4ySXNJeGRQUm5FdHdQRDdTc0thaUsrODZrNERzNkRFTApYOFFUOWFBU3lSK3NsY3BwNGJYdW5NMlJZTHErWmt0dlZlOWFxQS9XeHZLOGJqRkFkTXdOV2RiaHN0TzhoU0tKCjhmZ0hlYTgwWGRUbk5wMy9GUHl3MzBrNmlLWTlVYlJjTDF6N1BJQnVBNWowRTNTT3M3bmU3UjBDZ1lFQTNuRk4KdGlNSlBlcWVteVp2N3poQ2doc0thamIxOU0xc2tmVU11RmpBYk9yMDJ1TkVCVjFMbWMzS1FCVDRWL1FwdGxrNQpxQzJvb2cyNTB0QnFkNEFaS3N2Q1lUcDE4bmdZSERLTFREcUZ0Rmc5OXRBMVpQbDA5aExrTDVsa3lkdytwVEFFCkxtclNwcXhhbUp2Uy9DN1dhYThRMzZBcForaHhUczRSd2p5dHNHTUNnWUVBbEVkU3N2TnRwYU9iNlcxckp5OWQKMUV4M0RVUlZucnhoZWN4S1VHTTQ5SkVOUWhQUUcxczFid05MdCt1cVJuY0dleWdzZ08yQVRxV0JIU24xdmF5bgo3RmN4WU5lR2RqcTlYTnJpS1pRRlhKWHBiUGxTaE80Z2hQSUljQVNoMFpQMnhIQ3A0UEhmNkZONnpqM2VSWCs1CkZsMzMzTCt0MVdpeTB3Qk9UOXgvaHdVQ2dZRUF2L1d2Um5xOXd2enhtcHAxQmsvYXRVUjRuR2lKb0pTV0dPOEwKNXhwUUZLNCtWNWJBWUpDK2FTQTZaVXF6ZGROekc3V3NHQUl2QUlvdnprbWxWekxvaFJJSjBMWU9pd3d3WWtVTQpDT0NIK2JZYzR4MlN0bXpBRG9zRytEeTd5YWVUT0NKVHVXcmVGbyt1THZ4cCtzN0FvYnMrS0gyaXZkVE4wMS9wCjIyRlowbGtDZ1lFQXFBL3lwNHZKMVA0cUpWcHd0cDVUU28zTjhRT1ZhZFNmcnlSeUprczlvN3BlWGw5L3phZHIKN1ltcjlsODI4UlZDM2UwZ2E5SDZ2YU56SjBWRU43VFRjK3lZVm11Nzk1RzZ0cWk0dWhWOVlDYTRpU29UL3hDMQpZSkhFWUFPaEhXeTk1WlZlcTRCdSt3MVZ0WktWWkFNYnh3UkIyNHJuV2dOY3BORVc1L0YxRTZ3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-ca-secret
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1YdVVzZE1FTDRGUEpORjJwbVd3MFF3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1UQXdNalEwTkRoYQpGdzB5TlRBMk1Ea3dNalEwTkRoYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURtaytCdUxFTE5xZjJXUjJMTDNhU0UKREszRDhJWm1CUjlSbXFDZWVYYlA4eE83YWZXcmRSNWdLWFJhbCtoTm1BMUVCQjBxdXRzd3R4akYyczNUMW1LUgphaHFpdkJqSm85VWVuMFpYLytWd2ZGR05Ea1hJWUUxSndOb0o2b2Y2OFpsQk9sL2thaTFPdlE5TFdxR3dVOGdQClRGclVNcjV3ajI3Y1FZRlpJN1FSVHg0dWUrZzM4QjNWN3ZKZyt1QkVHY2lrN3prVkVzVzBZZXo3ZzdiVmhaR0UKU3hNTWFIMFI5S1FtUHkxQkJsNksxMWV3aGFaUmRTZnVlUUZQcTZLbnlsY2lUblprZWFyQjBkVU1JMU5TV1kzTQo3R29lT2oxSEJVamZnTStHV1ljUThydjNqdFNBSmRWQWZ6dTVmMmpvTG45enZyaWdsTktIYWowYWhybC90MWRWCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdnVMVC9Fb0tDdCs1aUpkMwpBeFVmanQ3K2FoUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEFYZmdXTUEySFJnaXFQcnI2ZXVqTDU5MS9GCkYvamNTejNlSW5rdXZ0WGppQXZPaUJoWnNvbExMQzE2VnQyc1ByV0JPdzBxR3doWmdhdWhCbW95RUlWQWxWNzMKY0gwZXFtNmJrbDlTSFdGMThBV1liaTFvZW1nYklBRWxUSzhLVTJkMUJDbVF0T1JLQldsNm4xR0w1R1oyenJMMgpJakViY2dyR01pbDNHZ0VMSlVoVGoxa2s1NGRlTnAzYlZUNzFqeVFGM2VteThRb2J5Q3dBcmhrdlNjQmQxaFF6Cm13Qk4wR2pSNGZ6Skw0dGNNL3hMMmNDekI1Tm1QeXlTRGFTNE9UK244SEZTdGsxYjZ4UmRLNHpPczlKVzc3VGgKcTFUcmwwSjVGSTZmMXpkT21vUVhJTGVRSlZTQjlpa0pUNEEvMytZSjQ3dy8zR0hLdHNQaWFFdThRUFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNXBQZ2JpeEN6YW45bGtkaXk5MmtoQXl0dy9DR1pnVWZVWnFnbm5sMnovTVR1Mm4xCnEzVWVZQ2wwV3Bmb1RaZ05SQVFkS3JyYk1MY1l4ZHJOMDlaaWtXb2FvcndZeWFQVkhwOUdWLy9sY0h4UmpRNUYKeUdCTlNjRGFDZXFIK3ZHWlFUcGY1R290VHIwUFMxcWhzRlBJRDB4YTFESytjSTl1M0VHQldTTzBFVThlTG52bwpOL0FkMWU3eVlQcmdSQm5JcE84NUZSTEZ0R0hzKzRPMjFZV1JoRXNUREdoOUVmU2tKajh0UVFaZWl0ZFhzSVdtClVYVW43bmtCVDZ1aXA4cFhJazUyWkhtcXdkSFZEQ05UVWxtTnpPeHFIam85UndWSTM0RFBobG1IRVBLNzk0N1UKZ0NYVlFIODd1WDlvNkM1L2M3NjRvSlRTaDJvOUdvYTVmN2RYVlFJREFRQUJBb0lCQVFEbGd2aDRjZElsQ1RvRAo1aGF2T25YUmd4VkwzaFRKWS92aXJIbUloUHNBenNJcllMTks4WTlFeEw2dWxscURNZ0N5WFMzekpIK2RwQU1pCm5rTVd3MlRsdmFtNXBtVStBTGZZZlUzMXRoL1pzY1V6Rkt2ZFlnNU1oWXdESnRJbnRXaUpCdVFBWnJlbWtvV3cKeWd2N2ljbXZnSjlBYlNvbXZIN3Erc0VYeTNRbmJLYzJEOXBBQWxxV2Q4OWhVb3U0Z3JmY0x3M1pTdXhFK2JEOApPMjNBOEtJUUpLZFBjUnlWdytySTgwTGdyVEF5WUE5blp1SEdNc1Fhc0N0NE5mQzN1ZHNrZ0pTS3NiQVYycHBhCmp2OWZWc2FJMEdhVnZydEFYY05zY09CRW1FTzFua2NnSm5PK2ZuVWdlQUNOTVJOQklzQ3BCQTgyR3VGdlUwZG4KcTdTVEo2blpBb0dCQVA2dmh2K0o3TGFGZ3JiOUpnKzJsZU5GOHprRWJmRUxiWTFaT1BHaDdsRW5kMThxSCswTQpzMDZsK0RLU0s4SDZ6OEhrRE92cGY3aDYyWG5tWUtiaWhPSi9ZZDF1RVFhUHphV2NLSjdldGFZdEhyRzVqYVUxCjVxNWphN21RWGhxb2hrRUJhOHJBcHgrQ1JzNWlBaXNZYzdUbUtpcDJBQVpHSzdaRFlCQnQxUTduQW9HQkFPZkUKZitKUXBLYndxTjBSYmEzWGdyK2xsRjNHMlFDazhhNS9aekxBZFFzQkdzaElRRzVtdDg2MlpzaGZrUUxkSms1QwpuZEQ3Z3ZZYkJMcWpXQTVEYTdMaC8wZjFrMjNrYWZOSDJnUDFHSGxFQm9QK3R2OVgyd2o4Ty9jZUlEK0xuZ0tsCnhxamdSU3cvRjFORmluRHYxS2RFTDBCdXR4VXBDME9pNisrTUtreGpBb0dCQVBLTG5TZ05aUlpwelpPUlFFY2sKbmxna0RMN1hIaEM1em1vWGQyaCt5MlFVRHRYZFd5dzR0U2FJWHZkaVJ6UGtOU2swa3EyMDRJS0MxRXdIL3pIUApkYmZ5a2ZQNzExRUZjRlp3Z2lyU2MvRys5SVZTN2JkUnZzK0ROVnN5UnJ4aWxBQ2ladEpmYUlsVVd6US9HRXVNCmJOenhlV1NZbmV0YnRsTk1sTmJ3a2tBdkFvR0FLU3k4dDMweU0wSlFEYTQ1K1FkdmdCS3ZrQlZ5bWUyenpoZHUKUXhMeitEZURCWS9vZW5TZk5RY3NyVzVrK2NoR05PTWEzSFRDYUd5V1kzMy9kOUU4Z2ZRcWdTTTh4T291ZEgwUQpXMkdncm5LS1ljclB3ZjlldDNMd1NFKysxT3M5OENSNWJha2lRT0VZaUwreS82dHI4U2RvNlo2QndpMmZoYTJkCkV0cW83UmNDZ1lCQWN2NzdKK2dMZzBUbUpvMUZDV1BRRWtqSUZ1d0puajdySjdhMGRaZzQ4ZEFJa25JUW54ZGcKc1diZHhEY0d2QnovM043ZGZoZ3kxOWUrbHdUcitlQlM3Sy9QNHlvS2ZhVEZtQlI5R0NiM0lHWDMvRUwzNVc5eApsL0lMOXU1cHQzYmlHU3JxdVJtKzJmYWVGWFlxVEtlWlRQUVVoT3BmWXl2TUtzU1Rvb0FJZkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1YdVVzZE1FTDRGUEpORjJwbVd3MFF3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1UQXdNalEwTkRoYQpGdzB5TlRBMk1Ea3dNalEwTkRoYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURtaytCdUxFTE5xZjJXUjJMTDNhU0UKREszRDhJWm1CUjlSbXFDZWVYYlA4eE83YWZXcmRSNWdLWFJhbCtoTm1BMUVCQjBxdXRzd3R4akYyczNUMW1LUgphaHFpdkJqSm85VWVuMFpYLytWd2ZGR05Ea1hJWUUxSndOb0o2b2Y2OFpsQk9sL2thaTFPdlE5TFdxR3dVOGdQClRGclVNcjV3ajI3Y1FZRlpJN1FSVHg0dWUrZzM4QjNWN3ZKZyt1QkVHY2lrN3prVkVzVzBZZXo3ZzdiVmhaR0UKU3hNTWFIMFI5S1FtUHkxQkJsNksxMWV3aGFaUmRTZnVlUUZQcTZLbnlsY2lUblprZWFyQjBkVU1JMU5TV1kzTQo3R29lT2oxSEJVamZnTStHV1ljUThydjNqdFNBSmRWQWZ6dTVmMmpvTG45enZyaWdsTktIYWowYWhybC90MWRWCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdnVMVC9Fb0tDdCs1aUpkMwpBeFVmanQ3K2FoUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEFYZmdXTUEySFJnaXFQcnI2ZXVqTDU5MS9GCkYvamNTejNlSW5rdXZ0WGppQXZPaUJoWnNvbExMQzE2VnQyc1ByV0JPdzBxR3doWmdhdWhCbW95RUlWQWxWNzMKY0gwZXFtNmJrbDlTSFdGMThBV1liaTFvZW1nYklBRWxUSzhLVTJkMUJDbVF0T1JLQldsNm4xR0w1R1oyenJMMgpJakViY2dyR01pbDNHZ0VMSlVoVGoxa2s1NGRlTnAzYlZUNzFqeVFGM2VteThRb2J5Q3dBcmhrdlNjQmQxaFF6Cm13Qk4wR2pSNGZ6Skw0dGNNL3hMMmNDekI1Tm1QeXlTRGFTNE9UK244SEZTdGsxYjZ4UmRLNHpPczlKVzc3VGgKcTFUcmwwSjVGSTZmMXpkT21vUVhJTGVRSlZTQjlpa0pUNEEvMytZSjQ3dy8zR0hLdHNQaWFFdThRUFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRZEhBZE5FYUtNL2s1dWVzcEFtNXhUREFOQmdrcWhraUc5dzBCQVFzRkFEQWUKTVJ3d0dnWURWUVFERXhOb2RXSmliR1V0WTJFdVkybHNhWFZ0TG1sdk1CNFhEVEl5TURZeE1EQXlORFEwT0ZvWApEVEkxTURZd09UQXlORFEwT0Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTRFNU1xV3kwUWxwSmcxNzQKRjQ2VElSWTRlZUNCOTZDQXRDZzFsODNjQzJFcWs5RHNpRnhEYmYxL1Q1c0J2RHRaWmNlM3I4SVpyT290OGlzcwp5ZWxkOWc3NkxZWWtFeUthTC83Q3AxT0d1NXRoaVV2TENab0tkc2xkdFFjMjg0UTV1cDl2QTNoUkdmVVMrSWs1CkdzU00xeHBrT2VUaTl2dzJoRitkNm9oS2NWMHdPZW9ldGxIbW1Ed0R3SWNkM3dOOGNsWGxvbjJzQ2NuUlg4akkKV0NiRTdYUEdUTDJmNjFicG01dUZvVStSVFp1Ulo1TUZhQW5iWDJudGU4Vmt0ODFYMUdIamw5clpHRkMyK21ZTAo1bXZFdVRBcXN3QTEva3ZpZjh0V3NETk0xczhMaTMwemlQTFdZcmlVZU00eHl6d0toeVdXOHpuVTEzb21LNEZTCm5pemx5UUlEQVFBQm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUys0dFA4U2dvSwozN21JbDNjREZSK08zdjVxRkRBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1CmFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQ1ZmOXVvY2NUS2k4MlZFZlFQeHJubGcvWHJGOE5nc1FSWE8KUE9PdHYxRDMyMWtiUDl3YlJFaEtoUlIxejhtMW0yYkhGQlZCSlVFcFlMbmxja09DQVdWb2dYejd3YmRXREtVbQpqUk5TaktnM1l3UDY4QTB5eU8raitxS2JTY3k3ZnNmMUdQWkc1a0ZsdkxBcE10SHEvVW5pd0d0eXZsd094cWoxCkFHRTRYbnlXQUJYL3V3eklzMDRBaUJlRE5jcEk4Qi9hSEJZNkJOTTV6Y0JvTDRUb1BDcW84ekgxVFZobTgwY1kKelR3M1JzK3hla2YyMXJEYXp1RDNjMmpITXNwVEMyQ1EwVGMxdGQrWTNOZEJuOCt2a0RiNjFWaGdTU2FyTzZDTApicW14Ujd0SGdoRFZ0bU5GSDJ1bFIyWnlKNVJzenBvNzZUUitKaFZXd0I1UFRhSWVBb0k9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNEU1TXFXeTBRbHBKZzE3NEY0NlRJUlk0ZWVDQjk2Q0F0Q2cxbDgzY0MyRXFrOURzCmlGeERiZjEvVDVzQnZEdFpaY2UzcjhJWnJPb3Q4aXNzeWVsZDlnNzZMWVlrRXlLYUwvN0NwMU9HdTV0aGlVdkwKQ1pvS2RzbGR0UWMyODRRNXVwOXZBM2hSR2ZVUytJazVHc1NNMXhwa09lVGk5dncyaEYrZDZvaEtjVjB3T2VvZQp0bEhtbUR3RHdJY2Qzd044Y2xYbG9uMnNDY25SWDhqSVdDYkU3WFBHVEwyZjYxYnBtNXVGb1UrUlRadVJaNU1GCmFBbmJYMm50ZThWa3Q4MVgxR0hqbDlyWkdGQzIrbVlMNW12RXVUQXFzd0ExL2t2aWY4dFdzRE5NMXM4TGkzMHoKaVBMV1lyaVVlTTR4eXp3S2h5V1c4em5VMTNvbUs0RlNuaXpseVFJREFRQUJBb0lCQVFDeDUraU9DSllBZXJRTAo2bXRENCtWMlBMV1dsU2NBVE9GSUF3eGUxdnhNV2tqMjdLSnVsUjgyUWZXVUloR0NSbUJsaGI1L1BLZzRxWlMvCm10YnZYcFVUOEZVbGZsdG1nZTloV2VMeDdDSFU4eXl0Uk54SlJWQS9YdjlmOGRUMzJFd2haUXNiNlhZSjdJT2IKZE50Q0M5clpVU2xsY2RGQ3JGQmhOYVYrdTVLdnpnbXRZVWREVU45Uzd3dndqZmZ4R3ptdFIwRGFXVWNNT1ZXcAp1REoyUnJJcXRIbjR1bVFXdTllRTNRNWw4TVJ6ODU0a002WFh5MWR6RGZKYmJrT2Jsdk5EK0tMa3BHbzMzUmxpClFsbFlXbVhSRm5RTmxkbllQMjl3TEJ6VDhQem1KaVBCWUlrR2pJb09rMEN2K1oyNGJKRnBsaW5ITHNiMlZaU1MKRHJxT2VVM0JBb0dCQU82MUhvbCt5d0VrOHlHakFmUlJ2SVJxcnBqR1JSNEdEMkpYV205VVQ1TndoK2ZUcmtJVgpnM1RVN1JwOXBUS3VYNWhnZVRzRXBSZ0FDcDVaTWx4dTEyYnVtSi9yeGd0ZmRZZ3ZHNVlhaG1WRWd3N2lmSHF4CnhQTVlaWmZyYlNMVUIzRmRBWXVsNFJhQnJyeitrVjQxTjhPRzBsS3pWdmEvcFNtVW55M3NqbWNGQW9HQkFQQ08KR1VhcnFEY3FtYU45eUxzQUs4bjlJUk1OaWZldFpzZGFLQjNpS3ZSOWY5VGZoSEJlQ0FZb1k5R1ZhckFUMW1qWQpYU0pvKzRlMW9aZWZ0SGZCN05OYVkrbjk5UmVuaGcydWg4U2tUT3lxeFZCdXhpbVdsNlJvaXREQkh1TmtHaE9KCkJiTmxiM3FGSnRmMFAxSHVWdmZxVXBTS0p1dUs2b0VjdjE2NVNIYjFBb0dBUHpaeFpzSFA2bmFwZCsvZDFhQkwKaHRsbGNRbVlSaElld3RFVkhzUTU2blp6VnYza2VKV1A0VUY5cEhVL2FRTnFSMFRNOWNjT0hTUHRxKzg4K2VOVQpZV3F2dWpIS21UcG5PbkFYSXhIVkl6NFlZcm14Y3lCZVltM0VnWTJUc2hScUFDZzcvNG9tNkRuaFZ5VW13OGJlCkJJWlFiaHdWM0hQMXZlUWdueDIwdkMwQ2dZRUFuMk9JRyt0aGFpd3Y0TVJYWEpDZ2N4WGw5Rm5rTU5nVVljSzcKRWhIcHBGWURmV2tjdDllV09YNUpwWFQ3VysvSkFXOWJScEdKR0VLZzczWkNmWmRnOUNuUVNocWJhekQxQWR2QwoyZWlEajgwWE1GUTF1Uml2SWFDaldlNmNLTThLK0NheVFFdlZzYmpJSkE4U1paY215TjNhR2RId04rR3p3QmpzCk5EZFFiSUVDZ1lBYWFReVIwRzlYcy9DazcyZzNqTkE1enlscjdDUzRtd2JXSjVIdThzT0h0QUJwVCsrREV4aWwKVnBSNk53SzcrM1JqaUNHYThIQ1dFdEVwc0xFb1duL0NUY2tOWVRYK2VtdEE1Y3ZZOWNFMGpqNEMvZUlQM1F4Kwo0aHpBSG5hVzJ3ZjFRSGJSQkljemQxU2lHVnFuVWlYMFpkbzFaaGtWVmxLd25ncldOMnV5Rmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU1YdVVzZE1FTDRGUEpORjJwbVd3MFF3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1UQXdNalEwTkRoYQpGdzB5TlRBMk1Ea3dNalEwTkRoYU1CNHhIREFhQmdOVkJBTVRFMmgxWW1Kc1pTMWpZUzVqYVd4cGRXMHVhVzh3CmdnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURtaytCdUxFTE5xZjJXUjJMTDNhU0UKREszRDhJWm1CUjlSbXFDZWVYYlA4eE83YWZXcmRSNWdLWFJhbCtoTm1BMUVCQjBxdXRzd3R4akYyczNUMW1LUgphaHFpdkJqSm85VWVuMFpYLytWd2ZGR05Ea1hJWUUxSndOb0o2b2Y2OFpsQk9sL2thaTFPdlE5TFdxR3dVOGdQClRGclVNcjV3ajI3Y1FZRlpJN1FSVHg0dWUrZzM4QjNWN3ZKZyt1QkVHY2lrN3prVkVzVzBZZXo3ZzdiVmhaR0UKU3hNTWFIMFI5S1FtUHkxQkJsNksxMWV3aGFaUmRTZnVlUUZQcTZLbnlsY2lUblprZWFyQjBkVU1JMU5TV1kzTQo3R29lT2oxSEJVamZnTStHV1ljUThydjNqdFNBSmRWQWZ6dTVmMmpvTG45enZyaWdsTktIYWowYWhybC90MWRWCkFnTUJBQUdqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDcERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVdnVMVC9Fb0tDdCs1aUpkMwpBeFVmanQ3K2FoUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBTEFYZmdXTUEySFJnaXFQcnI2ZXVqTDU5MS9GCkYvamNTejNlSW5rdXZ0WGppQXZPaUJoWnNvbExMQzE2VnQyc1ByV0JPdzBxR3doWmdhdWhCbW95RUlWQWxWNzMKY0gwZXFtNmJrbDlTSFdGMThBV1liaTFvZW1nYklBRWxUSzhLVTJkMUJDbVF0T1JLQldsNm4xR0w1R1oyenJMMgpJakViY2dyR01pbDNHZ0VMSlVoVGoxa2s1NGRlTnAzYlZUNzFqeVFGM2VteThRb2J5Q3dBcmhrdlNjQmQxaFF6Cm13Qk4wR2pSNGZ6Skw0dGNNL3hMMmNDekI1Tm1QeXlTRGFTNE9UK244SEZTdGsxYjZ4UmRLNHpPczlKVzc3VGgKcTFUcmwwSjVGSTZmMXpkT21vUVhJTGVRSlZTQjlpa0pUNEEvMytZSjQ3dy8zR0hLdHNQaWFFdThRUFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lSQUpsQkpENGtqOFpSQllycDdxNlhZQ1V3RFFZSktvWklodmNOQVFFTEJRQXcKSGpFY01Cb0dBMVVFQXhNVGFIVmlZbXhsTFdOaExtTnBiR2wxYlM1cGJ6QWVGdzB5TWpBMk1UQXdNalEwTkRoYQpGdzB5TlRBMk1Ea3dNalEwTkRoYU1DMHhLekFwQmdOVkJBTU1JaW91WTJ4MWMzUmxjaTB3TVM1b2RXSmliR1V0ClozSndZeTVqYVd4cGRXMHVhVzh3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3AKNEF6V1MyRE9jNlpwVjRaWlg0OWtVZ0Zkd1ZKTW1Na2xLM3ljcTZnSVNuZlBUMGVmcDQwa3VBbnIwVERRZHNRLwovUWtmOVcvVTY5TjVOb0JUcU03N0N0OEpsUnIwY1QwQTlxT0NEMVB6YndrTHFURUx5bFRMV0dMdDJkcGQ2OHg5CndCT29kTkJrQmsrTTR4QWFUOW5zL2lqemk5RXRFa3VvaU9oVUlCbVBqYW5Ydks0L2V2eGNMN3IvQkpjV1NYbWsKQnFNblJxQW9LM1Q5T0s2am13L3J3TjFYdmtLMnhmT3d3dVZJNnlJQ1NPQ3lXNm1wMlhRNnFJNHFOWHgyWUdjeQp6M2JzckJqK01KcFNtTzIyZzFYelNyc3Uwell1S1paYm9XUk9icEYzVncyd3ZrU0I5R0FvaVZDeWxjU1ZpZk1hCmswUDRzQWVhbVo4elJIeGtTeENUQWdNQkFBR2pnWkF3Z1kwd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWQKSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWQpNQmFBRkw3aTAveEtDZ3JmdVlpWGR3TVZINDdlL21vVU1DMEdBMVVkRVFRbU1DU0NJaW91WTJ4MWMzUmxjaTB3Ck1TNW9kV0ppYkdVdFozSndZeTVqYVd4cGRXMHVhVzh3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUpzaE9rZ2EKcU9pTDBQZjNSZTZtT1hIT0pNcUkzeWNoR2V4c2lwNVNpWHozRGxQMXVEMWxRUjliRVdxWXc0YktxRDU1SDNZegpHd3dkUjlNVGEwVGlocEsvOUFCZHMyaDFRL2tQaEp6STJtN2licEo1NzZRYWd4S1NEQ2plR09qOXg4bEw3bXBWCk55cmh3RzVyUG4rRVlJMkNVVHpCV1V3Z0tqUnE5M1RBdFZuZVUvQStSUXdyN0tTUE5TWGR4MEJUVFVPY0VyQTYKRlZISUtDVEZDd1ZscmQ1alpwbU1IN0NUbG52dElzMSt5aWJ1dWZobnBXdDE5QnJyc2JjM05OdFRnN1ZodU1GcgpWMWMrNHhMYTg3UE90WFhyNHdtMmtSbTRhMnRZeHJJd2ZJT05BMUlTeEVlNWpzTjZ0cEJUZkhDZ1duTytUckNECm8yUHJNT1kvdWI3WEdxWT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBcWVBTTFrdGd6bk9tYVZlR1dWK1BaRklCWGNGU1RKakpKU3Q4bkt1b0NFcDN6MDlICm42ZU5KTGdKNjlFdzBIYkVQLzBKSC9WdjFPdlRlVGFBVTZqTyt3cmZDWlVhOUhFOUFQYWpnZzlUODI4SkM2a3gKQzhwVXkxaGk3ZG5hWGV2TWZjQVRxSFRRWkFaUGpPTVFHay9aN1A0bzg0dlJMUkpMcUlqb1ZDQVpqNDJwMTd5dQpQM3I4WEMrNi93U1hGa2w1cEFhakowYWdLQ3QwL1RpdW81c1A2OERkVjc1Q3RzWHpzTUxsU09zaUFramdzbHVwCnFkbDBPcWlPS2pWOGRtQm5NczkyN0t3WS9qQ2FVcGp0dG9OVjgwcTdMdE0yTGltV1c2RmtUbTZSZDFjTnNMNUUKZ2ZSZ0tJbFFzcFhFbFluekdwTkQrTEFIbXBtZk0wUjhaRXNRa3dJREFRQUJBb0lCQUNTNkRPeHp4WTA5RWJocQp0T0F6dWRPdHF4L3pBUEVRZzBSbS8zejcyOHRYRmtvYTBOaGlxREJOSGMvL0hUZWt4Yzh6ekxvOUhSMkNrdWo4CjhJZWwwb0lTR3FCK3ZTSW1MVk04LzZMSjM1T2M2TzY5ZUo0YzgzSTNQTVJCdW1WZDZvc3hjTTZWMnN3VlZUT1gKajg2d2Z1UXZHdmwwdkJlcmdmSUJENEhJb3Q0WEgzZU1UY3FTdkM4WjNVZFVvbDZ4bkZlVDRhSzBNeVZZdWFBYQpkbVJ6ZVlDaTBneUZnR3c3WFZYajBEYXovR2ZCZ0xHdGhNYjJEN3ZtdDhzVXJZQ3JTdmFvdzUzMFY3VHFEOTdCCkJ3US9VNm9INGpoczZoYUl6Y1FKZlY5ZWVTZ1I5OXFSYzNUbkFGSmJoL3E5eittU2VxbGZMWWxBOTRKSzNQUnYKTXRxdVlHa0NnWUVBelhTcUpqV250TEFBVDUwK2R3WVREeTNiMjRHa2xjS3dUMlUwWWkyS0thc0RlZnNId24yTApINjhzdXB6ZFJadmRmNEJlM2haU3k3NTRCZWZMQkJVUkQvOXFaWW0yU2lNeFQxVnQrcjFzdEVqM2sycFVtNEJWClU1c2c2NHY0NmNicFhvOVpqdHZrMnpLVUl1SW1pTjJWeWZMQ1NLRkpGTDM5MHBMTEptQytFUzBDZ1lFQTA2cVIKOENWc1VTazY5VEs2T1Y3QXVRakRnR1ZWVkFlMlpCeGc1NEE5a0RzaURHb2xMeDl6ZnZtMDEvZWdtcWdkYllnOQpDUkhia0RpU2lWamRqT1lPYmlwaVRHL0ZWcmdoaEZJZm4vY21JcGJmeWdKV2FaNEtQY2xITUtMaFZCazhoZ1JWCnphZDJMTzNMT0VuYVJhWVlpM0l2ZnNIbTBVVDEzS1cvTjErVlFMOENnWUVBazRDOW8zOEQ3eUlvcHYvaVY3dGgKdFpVYjhpVEtUOGFkby9LcHdBNm4wYkI0WjN2RkgybllseC9Cd2h4YWM5NHFFSjdOL1M0VHRUa0NuR0xFaXlMQQp4RGFBWVhPVUR2ZmpMK3pLYjZqTlFVWGRrTlZXOXVrVTJWaFhNeVNqeU5ySXN0M0IwMkdsbFlWamV3UFgzSTBSClBCSndUNHFUbURPcTVpSURmWU1aRWVVQ2dZRUF2eGZNUDVHWnM4QlVjUkFHSGt0VUZQazdmMHg4OTZzcTJFRGkKbjc0Z1ZubDhhTmJma1NhRTRBclNZUFEzODhoNUlPMFJwWUdReHlpNzZ2SG11eERyMER2Rm1ScURmNkltNkU0NApMUFExWXA3eGxXLzgwY2VUbVdxQk1nQ3JDNERwS2xqNW1meG83WEVWdWxDNmxZeTV0aE0xbSt1MDFoTzdJQ1FuCmVQZDdTUU1DZ1lFQXU2OW5HWDc5U1FacTZvdldMSEE1ZWdxckVtR3gyL3U5VVpudGV6R3orbzVESHNJRTEyZWUKNmxqSWhGZVAvd0w2bTc4eXVmZjgwcWl0OWlzVVhjVFBGYnZnT2xiclQwZ0prb3J5eWUwYzZmQUNreGl0eHE0eQptTDhoWG1MQzZ1MEJGSEtvbTJHeFYxcVV2VGdPcGtFNWs1YkcyOStSTEVJNUpQdW4zd09VRXljPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:
  disable-envoy-version-check: "false"

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  # Disable the usage of CiliumEndpoint CRD
  disable-endpoint-crd: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # If you want metrics enabled in all of your Cilium agents, set the port for
  # which the Cilium agents will have their metrics exposed.
  # This option deprecates the "prometheus-serve-addr" in the
  # "cilium-metrics-config" ConfigMap
  # NOTE that this will open the port on ALL nodes where Cilium pods are
  # scheduled.
  prometheus-serve-addr: ":9090"
  # Port to expose Envoy metrics (e.g. "9095"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9095"
  # If you want metrics enabled in cilium-operator, set the port for
  # which the Cilium Operator will have their metrics exposed.
  # NOTE that this will open the port on the nodes where Cilium operator pod
  # is scheduled.
  operator-prometheus-serve-addr: ":6942"
  enable-metrics: "true"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "true"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: 5s

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0) of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  # bpf-lb-bypass-fib-lookup instructs Cilium to enable the FIB lookup bypass
  # optimization for nodeport reverse NAT handling.
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: cluster-01
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "1"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  tunnel: disabled
  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-iptables-rules: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "true"
  enable-bandwidth-manager: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/8

  kube-proxy-replacement:  "strict"
  kube-proxy-replacement-healthz-bind-address: "0.0.0.0:10256"
  enable-host-reachable-services: "true"
  node-port-range: "30000,32767"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  bpf-lb-mode: "hybrid"
  bpf-lb-algorithm: "maglev"
  enable-session-affinity: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path:  "/var/run/cilium/hubble.sock"
  # Address to expose Hubble metrics (e.g. ":7070"). Metrics server will be disabled if this
  # field is not set.
  hubble-metrics-server: ":9091"
  # A space separated list of metrics to enable. See [0] for available metrics.
  #
  # https://github.com/cilium/hubble/blob/master/Documentation/metrics.md
  hubble-metrics:
    dns:query;ignoreAAAA
    drop
    tcp
    flow
    port-distribution
    icmp
    http
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "kubernetes"
  disable-cnp-status-updates: "true"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  annotate-k8s-node: "true"
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: cluster-01
    peer-service: "hubble-peer.kube-system.svc.cluster.local:4254"
    listen-address: :4245
    dial-timeout:
    retry-timeout:
    sort-buffer-len-max:
    sort-buffer-drain-timeout:
    tls-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-envoy
  namespace: kube-system
data:

  envoy.yaml: |
    static_resources:
      listeners:
        - name: listener_hubble_ui
          address:
            socket_address:
              address: 0.0.0.0
              port_value: 8081
          filter_chains:
            - filters:
                - name: envoy.filters.network.http_connection_manager
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                    codec_type: auto
                    stat_prefix: ingress_http
                    route_config:
                      name: local_route
                      virtual_hosts:
                        - name: local_service
                          domains: ["*"]
                          routes:
                            - match:
                                prefix: "/api/"
                              route:
                                cluster: backend
                                prefix_rewrite: "/"
                                timeout: 0s
                                max_stream_duration:
                                  grpc_timeout_header_max: 0s
                            - match:
                                prefix: "/"
                              route:
                                cluster: frontend
                          cors:
                            allow_origin_string_match:
                              - prefix: "*"
                            allow_methods: GET, PUT, DELETE, POST, OPTIONS
                            allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                            max_age: "1728000"
                            expose_headers: grpc-status,grpc-message
                    http_filters:
                      - name: envoy.filters.http.grpc_web
                      - name: envoy.filters.http.cors
                      - name: envoy.filters.http.router
      clusters:
        - name: frontend
          connect_timeout: 0.25s
          type: strict_dns
          lb_policy: round_robin
          load_assignment:
            cluster_name: frontend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8080
        - name: backend
          connect_timeout: 0.25s
          type: logical_dns
          lb_policy: round_robin
          http2_protocol_options: {}
          load_assignment:
            cluster_name: backend
            endpoints:
              - lb_endpoints:
                  - endpoint:
                      address:
                        socket_address:
                          address: 127.0.0.1
                          port_value: 8090
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes/status
  verbs:
  # To annotate the k8s node with Cilium's metadata
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  # Deprecated for removal in v1.10
  - create
  - list
  - watch
  - update

  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumnodes
  - ciliumnodes/status
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumegressnatpolicies
  - ciliumendpointslices
  verbs:
  - '*'
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumnetworkpolicies/status
  - ciliumnetworkpolicies/finalizers
  - ciliumclusterwidenetworkpolicies
  - ciliumclusterwidenetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/finalizers
  - ciliumendpoints
  - ciliumendpoints/status
  - ciliumendpoints/finalizers
  - ciliumnodes
  - ciliumnodes/status
  - ciliumnodes/finalizers
  - ciliumidentities
  - ciliumendpointslices
  - ciliumidentities/status
  - ciliumidentities/finalizers
  - ciliumlocalredirectpolicies
  - ciliumlocalredirectpolicies/status
  - ciliumlocalredirectpolicies/finalizers
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - update
  - watch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
rules:
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  - ciliumexternalworkloads
  - ciliumexternalworkloads/status
  - ciliumidentities
  - ciliumidentities/status
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - '*'
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: cilium-agent
  namespace: kube-system
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9095"
  labels:
    k8s-app: cilium
spec:
  clusterIP: None
  type: ClusterIP
  selector:
    k8s-app: cilium
  ports:
  - name: envoy-metrics
    port: 9095
    protocol: TCP
    targetPort: envoy-metrics
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  type: ClusterIP
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-metrics
  namespace: kube-system
  labels:
    k8s-app: hubble
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9091"
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: hubble-metrics
    port: 9091
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 4254
    protocol: TCP
    targetPort: 4244
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9090"
        prometheus.io/scrape: "true"
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "74a0e1f0bc5ddc3489467c8d681afaefa0572d38491a13653bb9b7b4717e1acf"
        # This annotation plus the CriticalAddonsOnly toleration makes
        # cilium to be a critical pod in the cluster, which ensures cilium
        # gets priority scheduling.
        # https://kubernetes.io/docs/tasks/administer-cluster/guaranteed-scheduling-critical-addon-pods/
        scheduler.alpha.kubernetes.io/critical-pod: ""
      labels:
        k8s-app: cilium
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
            - matchExpressions:
              - key: beta.kubernetes.io/os
                operator: In
                values:
                - linux
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - cilium
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9876
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cni-chaining-mode
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: custom-cni-conf
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.37.140"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        lifecycle:
          postStart:
            exec:
              command:
              - "/cni-install.sh"
              - "--enable-debug=false"
              - "--cni-exclusive=true"
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        ports:
        - name: prometheus
          containerPort: 9090
          hostPort: 9090
          protocol: TCP
        - name: envoy-metrics
          containerPort: 9095
          hostPort: 9095
          protocol: TCP
        - name: hubble-metrics
          containerPort: 9091
          hostPort: 9091
          protocol: TCP
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: cni-path
          mountPath: /host/opt/cni/bin
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
      hostNetwork: true
      initContainers:
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        securityContext:
          privileged: true
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.11.5@sha256:79e66c3c2677e9ecc3fd5b2ed8e4ea7e49cf99ed6ee181f2ef43400c4db5eef0"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.37.140"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        secret:
          secretName: cilium-clustermesh
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          optional: true
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/cilium-configmap-checksum: "74a0e1f0bc5ddc3489467c8d681afaefa0572d38491a13653bb9b7b4717e1acf"
        prometheus.io/port: "6942"
        prometheus.io/scrape: "true"
      labels:
        io.cilium/app: operator
        name: cilium-operator
    spec:
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: io.cilium/app
                operator: In
                values:
                - operator
            topologyKey: kubernetes.io/hostname
      containers:
      - name: cilium-operator
        image: quay.io/cilium/operator-generic:v1.11.5@sha256:8ace281328b27d4216218c604d720b9a63a8aec2bd1996057c79ab0168f9d6d8
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: "34.117.37.140"
        - name: KUBERNETES_SERVICE_PORT
          value: "443"
        ports:
        - name: prometheus
          containerPort: 6942
          hostPort: 6942
          protocol: TCP
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.4.13"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - >
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &
          export rootpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $rootpw | etcdctl --interactive=false user add root;
          etcdctl user grant-role root root;
          export vmpw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $vmpw | etcdctl --interactive=false user add externalworkload;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          export remotepw=`head /dev/urandom | tr -dc A-Za-z0-9 | head -c 16`;
          echo $remotepw | etcdctl --interactive=false user add remote;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.4.13"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        - --listen-client-urls=https://127.0.0.1:2379,https://$(HOSTNAME_IP):2379
        - --advertise-client-urls=https://$(HOSTNAME_IP):2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.11.5@sha256:5514ab415aa8986a45876490a14957489f73d86d55513242153d6893fd0fdaf3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
      volumes:
      - name: etcd-server-secrets
        secret:
          secretName: clustermesh-apiserver-server-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-admin-client
        secret:
          secretName: clustermesh-apiserver-admin-cert
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-relay-configmap-checksum: "363339df61d9d036adbc6dace43be0170166db29544a4b7749e4c157adbdb887"
      labels:
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "k8s-app"
                  operator: In
                  values:
                    - cilium
            topologyKey: "kubernetes.io/hostname"
      containers:
        - name: hubble-relay
          image: "quay.io/cilium/hubble-relay:v1.11.5@sha256:8498f27a9c85ff74e56e18cfce4f0ccfae6f55d4134d708d364d273f3043f817"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
      restartPolicy: Always
      priorityClassName:
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: ca.crt
                  path: hubble-server-ca.crt
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  template:
    metadata:
      annotations:
        # ensure pods roll when configmap updates
        cilium.io/hubble-ui-envoy-configmap-checksum: "0eda85aa70a7980601c8e106bc87ba013750302f87244f973da529da0d0cd8d0"
      labels:
        k8s-app: hubble-ui
    spec:
      securityContext:
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      priorityClassName:
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.8.5@sha256:4eaca1ec1741043cfba6066a165b3bf251590cf4ac66371c4f63fbed2224ebb4"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.8.5@sha256:2bce50cf6c32719d072706f7ceccad654bfa907b2745a496da99610776fe31ed"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
      - name: proxy
        image: "docker.io/envoyproxy/envoy:v1.18.4@sha256:e5c2bb2870d0e59ce917a5100311813b4ede96ce4eb0c6bfa879e3fbe3e83935"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        command: [envoy]
        args:
        - -c
        - /etc/envoy.yaml
        - -l
        - info
        volumeMounts:
        - name: hubble-ui-envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: hubble-ui-envoy-yaml
        configMap:
          name: hubble-ui-envoy
